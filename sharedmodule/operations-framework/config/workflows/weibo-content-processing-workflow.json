{
  "name": "weibo-content-processing-workflow",
  "description": "微博内容处理工作流 - AI处理、格式转换和内容整理",
  "version": "1.0.0",
  "enabled": true,
  "variables": [
    {
      "name": "sourceData",
      "type": "string",
      "value": "${input.sourceData || ''}",
      "scope": "workflow",
      "description": "源数据文件或目录"
    },
    {
      "name": "processingType",
      "type": "string",
      "value": "${input.processingType || 'ai-processing'}",
      "scope": "workflow",
      "description": "处理类型：ai-processing, format-conversion, content-organization"
    },
    {
      "name": "outputFormat",
      "type": "string",
      "value": "${input.outputFormat || 'json'}",
      "scope": "workflow",
      "description": "输出格式：json, markdown, html, pdf"
    },
    {
      "name": "enableAIProcessing",
      "type": "boolean",
      "value": "${input.enableAIProcessing || true}",
      "scope": "workflow",
      "description": "是否启用AI处理"
    },
    {
      "name": "aiModel",
      "type": "string",
      "value": "${input.aiModel || 'gpt-4'}",
      "scope": "workflow",
      "description": "AI模型类型"
    },
    {
      "name": "outputDir",
      "type": "string",
      "value": "${input.outputDir || './output/weibo-processing'}",
      "scope": "workflow",
      "description": "输出目录"
    },
    {
      "name": "enableWebhook",
      "type": "boolean",
      "value": "${input.enableWebhook || false}",
      "scope": "workflow",
      "description": "是否启用Webhook通知"
    }
  ],
  "steps": [
    {
      "id": "load_source_data",
      "name": "加载源数据",
      "operation": "data-processor",
      "params": {
        "operation": "load",
        "source": "${sourceData}",
        "format": "auto-detect",
        "encoding": "utf-8"
      },
      "outputVariable": "loadedData",
      "retry": {
        "maxRetries": 3,
        "delay": 1000
      }
    },
    {
      "id": "validate_data",
      "name": "验证数据",
      "operation": "data-processor",
      "params": {
        "operation": "validate",
        "inputData": "${loadedData}",
        "validations": [
          {
            "name": "data_structure",
            "type": "structure",
            "condition": "data && typeof data === 'object'",
            "message": "数据必须是有效的对象结构"
          },
          {
            "name": "content_exists",
            "type": "exists",
            "condition": "data.content || data.posts",
            "message": "数据必须包含内容或帖子信息"
          },
          {
            "name": "not_empty",
            "type": "expression",
            "condition": "Object.keys(data).length > 0",
            "message": "数据不能为空"
          }
        ]
      },
      "outputVariable": "validatedData",
      "condition": {
        "type": "exists",
        "condition": "loadedData"
      }
    },
    {
      "id": "data_preprocessing",
      "name": "数据预处理",
      "operation": "data-processor",
      "params": {
        "operation": "preprocess",
        "inputData": "${validatedData}",
        "transformations": [
          {
            "type": "clean",
            "rules": [
              { "action": "trim", "fields": ["title", "content", "author"] },
              { "action": "remove_empty", "fields": ["content"] },
              { "action": "normalize", "fields": ["timestamp"] }
            ]
          },
          {
            "type": "structure",
            "rules": [
              { "action": "flatten", "maxDepth": 3 },
              { "action": "group", "by": "author" },
              { "action": "sort", "by": "timestamp", "order": "desc" }
            ]
          },
          {
            "type": "enrich",
            "rules": [
              { "action": "add_metadata", "fields": ["processing_time", "source_type"] },
              { "action": "calculate_stats", "fields": ["content_length", "word_count"] }
            ]
          }
        ]
      },
      "outputVariable": "preprocessedData"
    },
    {
      "id": "ai_content_analysis",
      "name": "AI内容分析",
      "operation": "conditional",
      "params": {
        "operation": "if",
        "condition": {
          "type": "expression",
          "condition": "enableAIProcessing === true"
        },
        "thenSteps": [
          {
            "id": "sentiment_analysis",
            "name": "情感分析",
            "operation": "ai-service",
            "params": {
              "operation": "analyze",
              "analysisType": "sentiment",
              "inputData": "${preprocessedData}",
              "model": "${aiModel}",
              "outputDir": "${outputDir}/ai-analysis",
              "confidence": 0.8
            },
            "outputVariable": "sentimentResults"
          },
          {
            "id": "topic_extraction",
            "name": "主题提取",
            "operation": "ai-service",
            "params": {
              "operation": "extract",
              "extractionType": "topics",
              "inputData": "${preprocessedData}",
              "model": "${aiModel}",
              "maxTopics": 10,
              "minTopicFrequency": 2
            },
            "outputVariable": "topicResults"
          },
          {
            "id": "entity_recognition",
            "name": "实体识别",
            "operation": "ai-service",
            "params": {
              "operation": "extract",
              "extractionType": "entities",
              "inputData": "${preprocessedData}",
              "model": "${aiModel}",
              "entityTypes": ["person", "organization", "location", "product"]
            },
            "outputVariable": "entityResults"
          },
          {
            "id": "content_summarization",
            "name": "内容总结",
            "operation": "ai-service",
            "params": {
              "operation": "summarize",
              "inputData": "${preprocessedData}",
              "model": "${aiModel}",
              "summaryLength": "medium",
              "focus": "key-points",
              "outputFormat": "structured"
            },
            "outputVariable": "summaryResults"
          }
        ]
      },
      "outputVariable": "aiAnalysisResults"
    },
    {
      "id": "format_conversion",
      "name": "格式转换",
      "operation": "switch",
      "value": "${outputFormat}",
      "cases": [
        {
          "case": "markdown",
          "steps": [
            {
              "id": "convert_to_markdown",
              "name": "转换为Markdown",
              "operation": "html-formatter",
              "params": {
                "operation": "convertToMarkdown",
                "sourceData": "${preprocessedData}",
                "outputDir": "${outputDir}/markdown",
                "includeMetadata": true,
                "imageHandling": "embed"
              },
              "outputVariable": "markdownResults"
            }
          ]
        },
        {
          "case": "html",
          "steps": [
            {
              "id": "convert_to_html",
              "name": "转换为HTML",
              "operation": "html-formatter",
              "params": {
                "operation": "batchFormatHTML",
                "sourceData": "${preprocessedData}",
                "outputDir": "${outputDir}/html",
                "strategy": "readable",
                "includeStyles": true,
                "responsive": true
              },
              "outputVariable": "htmlResults"
            }
          ]
        },
        {
          "case": "pdf",
          "steps": [
            {
              "id": "convert_to_pdf",
              "name": "转换为PDF",
              "operation": "data-processor",
              "params": {
                "operation": "convert",
                "inputData": "${preprocessedData}",
                "targetFormat": "pdf",
                "outputDir": "${outputDir}/pdf",
                "template": "professional",
                "includeImages": true
              },
              "outputVariable": "pdfResults"
            }
          ]
        },
        {
          "case": "json",
          "steps": [
            {
              "id": "format_json",
              "name": "格式化JSON",
              "operation": "data-processor",
              "params": {
                "operation": "format",
                "inputData": "${preprocessedData}",
                "format": "json",
                "indentation": 2,
                "outputFile": "${outputDir}/formatted_data.json"
              },
              "outputVariable": "jsonResults"
            }
          ]
        }
      ],
      "defaultSteps": [
        {
          "id": "default_format",
          "name": "默认格式处理",
          "operation": "data-processor",
          "params": {
            "operation": "format",
            "inputData": "${preprocessedData}",
            "format": "json",
            "outputFile": "${outputDir}/default_output.json"
          },
          "outputVariable": "defaultResults"
        }
      ]
    },
    {
      "id": "content_organization",
      "name": "内容整理",
      "operation": "file-organizer",
      "params": {
        "operation": "intelligentOrganize",
        "sourceDirectory": "${outputDir}",
        "targetDirectory": "${outputDir}/organized",
        "strategy": "content-type",
        "createSummary": true,
        "backup": false
      },
      "outputVariable": "organizedContent"
    },
    {
      "id": "generate_report",
      "name": "生成处理报告",
      "operation": "data-processor",
      "params": {
        "operation": "generate",
        "template": "processing_report",
        "data": {
          "sourceInfo": {
            "source": "${sourceData}",
            "processingType": "${processingType}",
            "processingTime": "${new Date().toISOString()}"
          },
          "statistics": {
            "totalRecords": "${preprocessedData ? preprocessedData.length : 0}",
            "aiProcessed": "${enableAIProcessing}",
            "outputFormat": "${outputFormat}",
            "processingDuration": "${Date.now() - workflow.startTime}"
          },
          "results": {
            "aiAnalysis": "${aiAnalysisResults}",
            "formatConversion": "${formatConversion.outputVariable}",
            "organization": "${organizedContent}"
          }
        },
        "outputFormat": "json",
        "outputFile": "${outputDir}/processing_report.json"
      },
      "outputVariable": "processingReport"
    },
    {
      "id": "merge_final_results",
      "name": "合并最终结果",
      "operation": "data-processor",
      "params": {
        "operation": "merge",
        "inputData": [
          "${preprocessedData}",
          "${aiAnalysisResults}",
          "${formatConversion.outputVariable}",
          "${organizedContent}",
          "${processingReport}"
        ],
        "mergeStrategy": "comprehensive",
        "outputFormat": "${outputFormat}",
        "outputFile": "${outputDir}/final_processing_results.${outputFormat}"
      },
      "outputVariable": "finalResults"
    },
    {
      "id": "send_notification",
      "name": "发送通知",
      "operation": "conditional",
      "params": {
        "operation": "if",
        "condition": {
          "type": "expression",
          "condition": "enableWebhook === true"
        },
        "thenSteps": [
          {
            "id": "webhook_notification",
            "name": "Webhook通知",
            "operation": "notification",
            "params": {
              "operation": "webhook",
              "url": "${input.webhookUrl || 'https://example.com/webhook'}",
              "method": "POST",
              "data": {
                "workflow": "weibo-content-processing-workflow",
                "processingType": "${processingType}",
                "sourceData": "${sourceData}",
                "outputFormat": "${outputFormat}",
                "timestamp": "${new Date().toISOString()}",
                "results": {
                  "totalRecords": "${preprocessedData ? preprocessedData.length : 0}",
                  "outputFile": "${outputDir}/final_processing_results.${outputFormat}",
                  "processingReport": "${processingReport}"
                }
              },
              "headers": {
                "Content-Type": "application/json"
              },
              "retry": {
                "maxRetries": 3,
                "delay": 2000
              }
            },
            "outputVariable": "webhookResult"
          }
        ]
      },
      "outputVariable": "notificationResult"
    }
  ],
  "metadata": {
    "author": "WebAuto Team",
    "created": "2024-01-01T00:00:00Z",
    "updated": "2024-01-01T00:00:00Z",
    "tags": ["weibo", "content-processing", "ai", "format-conversion", "data-analysis"],
    "category": "data-processing",
    "complexity": "high",
    "estimatedTime": "5-15 minutes",
    "dependencies": [
      "data-processor",
      "ai-service",
      "html-formatter",
      "file-organizer",
      "notification"
    ],
    "configOptions": {
      "processingTypes": ["ai-processing", "format-conversion", "content-organization"],
      "outputFormats": ["json", "markdown", "html", "pdf"],
      "aiModels": ["gpt-4", "gpt-3.5", "claude", "gemini"]
    }
  }
}