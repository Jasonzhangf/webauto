{
  "transformers": {
    "anthropic": {
      "request_mapping": {
        "model": "model",
        "messages": "messages",
        "system": "system",
        "max_tokens": "max_tokens",
        "temperature": "temperature",
        "top_p": "top_p",
        "top_k": "top_k",
        "stop_sequences": "stop",
        "stream": "stream",
        "tools": "tools",
        "tool_choice": "tool_choice"
      },
      "response_mapping": {
        "id": "id",
        "type": "object",
        "role": "choices[0].message.role",
        "content": "choices[0].message.content",
        "stop_reason": "choices[0].finish_reason",
        "stop_sequence": "choices[0].stop_sequence",
        "usage": "usage"
      }
    },
    "openai": {
      "request_mapping": {
        "model": "model",
        "messages": "messages",
        "system": "system",
        "max_tokens": "max_tokens",
        "temperature": "temperature",
        "top_p": "top_p",
        "frequency_penalty": "frequency_penalty",
        "presence_penalty": "presence_penalty",
        "stop": "stop",
        "stream": "stream",
        "tools": "tools",
        "tool_choice": "tool_choice"
      },
      "response_mapping": {
        "id": "id",
        "object": "object",
        "created": "created",
        "model": "model",
        "system_fingerprint": "system_fingerprint",
        "choices": "choices",
        "usage": "usage"
      }
    },
    "gemini": {
      "request_mapping": {
        "model": "model",
        "contents": "messages",
        "systemInstruction": "system",
        "generationConfig.maxOutputTokens": "max_tokens",
        "generationConfig.temperature": "temperature",
        "generationConfig.topP": "top_p",
        "generationConfig.topK": "top_k",
        "generationConfig.stopSequences": "stop",
        "stream": "stream",
        "tools": "tools",
        "toolConfig": "tool_choice"
      },
      "response_mapping": {
        "id": "id",
        "model": "model",
        "candidates[0].content.role": "choices[0].message.role",
        "candidates[0].content.parts[0].text": "choices[0].message.content",
        "candidates[0].finishReason": "choices[0].finish_reason",
        "usageMetadata": "usage"
      }
    }
  },
  "transformer_chains": {
    "anthropic_to_openai": [
      "anthropic"
    ],
    "openai_to_anthropic": [
      "openai"
    ],
    "gemini_to_openai": [
      "gemini"
    ],
    "openai_to_gemini": [
      "openai"
    ]
  }
}