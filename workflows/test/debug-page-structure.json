{
  "name": "页面结构调试",
  "description": "分析1688搜索结果页面的实际结构",
  "version": "1.0.0",
  "nodes": [
    { "id": "start", "type": "StartNode", "name": "开始", "next": ["attach"] },
    { "id": "attach", "type": "AttachSessionNode", "name": "会话接力", "config": {}, "next": ["navigate_search"] },
    { 
      "id": "navigate_search",
      "type": "NavigationNode",
      "name": "导航到搜索页",
      "config": {
        "url": "https://s.1688.com/selloffer/offer_search.htm?keywords=%E6%89%8B%E6%9C%BA%E4%BF%9D%E6%8A%A4%E8%86%9C&n=y",
        "waitUntil": "domcontentloaded",
        "timeout": 30000
      },
      "next": ["wait_search"]
    },
    { 
      "id": "wait_search",
      "type": "WaitNode",
      "name": "等待搜索结果加载",
      "config": {
        "minMs": 5000,
        "maxMs": 8000
      },
      "next": ["debug_structure"]
    },
    {
      "id": "debug_structure",
      "type": "JavaScriptExecutionNode",
      "name": "调试页面结构",
      "config": {
        "script": "(function(){\n  console.log('=== 页面基本信息 ===');\n  console.log('标题:', document.title);\n  console.log('URL:', window.location.href);\n  \n  console.log('\\n=== 查找所有可能的容器 ===');\n  var allDivs = document.querySelectorAll('div');\n  var containerCandidates = [];\n  \n  for (var i = 0; i < allDivs.length; i++) {\n    var div = allDivs[i];\n    var className = div.className || '';\n    var id = div.id || '';\n    \n    // 查找可能包含商品列表的容器\n    if (className.includes('offer') || className.includes('list') || className.includes('item') ||\n        className.includes('product') || className.includes('search') ||\n        id.includes('offer') || id.includes('list') || id.includes('search')) {\n      \n      var rect = div.getBoundingClientRect();\n      var childCount = div.children.length;\n      \n      if (rect.width > 100 && rect.height > 100 && childCount > 0) {\n        containerCandidates.push({\n          element: div,\n          className: className,\n          id: id,\n          rect: rect,\n          childCount: childCount\n        });\n      }\n    }\n  }\n  \n  // 按子元素数量排序\n  containerCandidates.sort(function(a, b) { return b.childCount - a.childCount; });\n  \n  console.log('找到 ' + containerCandidates.length + ' 个可能的容器:');\n  for (var i = 0; i < Math.min(containerCandidates.length, 10); i++) {\n    var candidate = containerCandidates[i];\n    console.log((i+1) + '. ID:' + candidate.id + ' Class:' + candidate.className + \n                ' 子元素:' + candidate.childCount + ' 尺寸:' + candidate.rect.width + 'x' + candidate.rect.height);\n  }\n  \n  console.log('\\n=== 查找旺旺链接 ===');\n  var allLinks = document.querySelectorAll('a');\n  var wwLinks = [];\n  \n  for (var i = 0; i < allLinks.length; i++) {\n    var link = allLinks[i];\n    var href = link.href || '';\n    var className = link.className || '';\n    \n    if (href.includes('air.1688.com') || className.includes('ww') || className.includes('wangwang')) {\n      wwLinks.push({\n        href: href,\n        className: className,\n        text: link.textContent.trim()\n      });\n    }\n  }\n  \n  console.log('找到 ' + wwLinks.length + ' 个旺旺链接:');\n  for (var i = 0; i < Math.min(wwLinks.length, 5); i++) {\n    var wwLink = wwLinks[i];\n    console.log((i+1) + '. ' + wwLink.href + ' Class:' + wwLink.className + ' Text:' + wwLink.text);\n  }\n  \n  // 截图保存\n  return { \n    success: true, \n    containers: containerCandidates.length,\n    wwLinks: wwLinks.length,\n    message: '页面结构分析完成'\n  };\n})();",
        "saveScreenshots": true
      },
      "next": ["end"]
    },
    { 
      "id": "end",
      "type": "EndNode",
      "name": "结束",
      "config": {
        "cleanup": false,
        "saveLogs": true
      }
    }
  ],
  "globalConfig": {
    "logLevel": "info",
    "timeout": 180000
  }
}