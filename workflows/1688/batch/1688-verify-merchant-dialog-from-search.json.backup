{
  "name": "1688从搜索结果验证商家对话框",
  "description": "从搜索结果页面点击旺旺链接，验证是否能打开具体商家的对话框",
  "version": "1.0.0",
  "preflows": ["1688-login-preflow"],
  "nodes": [
    { "id": "start", "type": "StartNode", "name": "开始", "next": ["attach"] },
    {
      "id": "attach",
      "type": "AttachSessionNode",
      "name": "会话接力",
      "config": {},
      "next": ["navigate_search"]
    },
    {
      "id": "navigate_search",
      "type": "NavigationNode",
      "name": "导航到搜索结果页",
      "config": {
        "url": "https://s.1688.com/selloffer/offer_search.htm?keywords=%B7%FE%D7%B0",
        "waitUntil": "domcontentloaded",
        "timeout": 30000
      },
      "next": ["wait_search"]
    },
    {
      "id": "wait_search",
      "type": "WaitNode",
      "name": "等待搜索结果完全加载",
      "config": { "minMs": 3000, "maxMs": 5000 },
      "next": ["find_first_merchant"]
    },
    {
      "id": "find_first_merchant",
      "type": "PageSnapshotNode",
      "name": "找到第一个商家并点击旺旺链接",
      "config": {
        "script": "console.log('🔍 寻找第一个商家旺旺链接...'); const offerItems = document.querySelectorAll('.sm-offer-item, .offer-item, .sm-offer, [class*=offer]'); if (offerItems.length > 0) { const firstItem = offerItems[0]; const wangwangSpan = firstItem.querySelector('span.J_WangWang'); const wangwangLink = wangwangSpan ? wangwangSpan.querySelector('a.ww-link') : null; const merchantName = firstItem.querySelector('h4, [class*=title], a[title]') ? firstItem.querySelector('h4, [class*=title], a[title]').textContent.trim() : ''; console.log(`找到商家: ${merchantName}`); console.log(`旺旺链接: ${wangwangLink ? wangwangLink.href : '未找到'}`); if (wangwangLink) { console.log('点击旺旺链接...'); wangwangLink.click(); return { success: true, merchantName: merchantName, chatUrl: wangwangLink.href, action: 'clicked', timestamp: new Date().toISOString() }; } else { return { success: false, error: '未找到旺旺链接', merchantName: merchantName, timestamp: new Date().toISOString() }; } } else { return { success: false, error: '未找到商家商品', timestamp: new Date().toISOString() }; }",
        "saveScreenshots": true
      },
      "next": ["wait_chat_open"]
    },
    {
      "id": "wait_chat_open",
      "type": "WaitNode",
      "name": "等待聊天对话框打开",
      "config": { "minMs": 5000, "maxMs": 8000 },
      "next": ["verify_merchant_dialog"]
    },
    {
      "id": "verify_merchant_dialog",
      "type": "PageSnapshotNode",
      "name": "验证商家对话框",
      "config": {
        "script": "console.log('🔍 验证商家对话框...'); const currentUrl = window.location.href; const pageTitle = document.title; const isInChat = currentUrl.includes('air.1688.com') || currentUrl.includes('def_cbu_web_im'); console.log(`当前URL: ${currentUrl}`); console.log(`页面标题: ${pageTitle}`); console.log(`是否在聊天页面: ${isInChat}`); // 检查是否有具体的商家对话窗口 const chatWindow = document.querySelector('[class*=\"chat-window\"], [class*=\"dialog\"], [class*=\"conversation\"], .chat-panel, .conversation-panel'); const merchantInfo = document.querySelector('[class*=\"merchant\"], [class*=\"user-info\"], [class*=\"seller-info\"]'); const messageList = document.querySelector('[class*=\"message-list\"], [class*=\"chat-history\"], .messages'); const inputArea = document.querySelector('textarea, input[type=\"text\"], [contenteditable], .chat-input, .message-input'); const sendButton = document.querySelector('button[type=\"submit\"], [class*=\"send\"], [class*=\"send-btn\"]'); console.log(`找到聊天窗口: ${!!chatWindow}`); console.log(`找到商家信息: ${!!merchantInfo}`); console.log(`找到消息列表: ${!!messageList}`); console.log(`找到输入框: ${!!inputArea}`); console.log(`找到发送按钮: ${!!sendButton}`); const dialogInfo = { currentUrl: currentUrl, pageTitle: pageTitle, isInChat: isInChat, hasChatWindow: !!chatWindow, hasMerchantInfo: !!merchantInfo, hasMessageList: !!messageList, hasInputArea: !!inputArea, hasSendButton: !!sendButton, timestamp: new Date().toISOString() }; return { success: isInChat && (!!inputArea || !!sendButton), verification: dialogInfo, timestamp: new Date().toISOString() };",
        "saveScreenshots": true
      },
      "next": ["save_results"]
    },
    {
      "id": "save_results",
      "type": "ResultSaverNode",
      "name": "保存验证结果",
      "config": {
        "outputDir": "workflows/records",
        "filenameTemplate": "1688-merchant-dialog-verification-{timestamp}.json",
        "includeMetadata": true
      },
      "next": ["end"]
    },
    {
      "id": "end",
      "type": "EndNode",
      "name": "验证完成",
      "config": { "cleanup": false, "saveLogs": true }
    }
  ],
  "globalConfig": {
    "logLevel": "info",
    "screenshotOnError": true,
    "autoCleanup": false,
    "parallelExecution": false,
    "timeout": 300000
  }
}