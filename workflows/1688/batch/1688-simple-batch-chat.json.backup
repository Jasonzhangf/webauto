{
  "name": "1688简单批量聊天",
  "description": "基于现有节点实现商家信息提取和批量聊天（支持去重和历史记录）",
  "version": "1.0.0",
  "preflows": ["1688-login-preflow"],
  "nodes": [
    { "id": "start", "type": "StartNode", "name": "开始", "next": ["attach"] },
    {
      "id": "attach",
      "type": "AttachSessionNode",
      "name": "会话接力",
      "config": {},
      "next": ["load_history"]
    },
    {
      "id": "load_history",
      "type": "PageSnapshotNode",
      "name": "初始化历史记录",
      "config": {
        "script": "console.log('📝 初始化历史记录...'); const historyData = localStorage.getItem('1688_sent_history') || '{}'; const sentHistory = JSON.parse(historyData); console.log('已加载历史记录，记录数量:', Object.keys(sentHistory).length); return { success: true, sentHistory: sentHistory, historyCount: Object.keys(sentHistory).length, timestamp: new Date().toISOString() };",
        "saveScreenshots": false
      },
      "next": ["search_keyword"]
    },
    {
      "id": "search_keyword",
      "type": "NavigationNode",
      "name": "搜索关键字(GBK编码)",
      "config": {
        "url": "https://s.1688.com/selloffer/offer_search.htm?keywords=%B7%FE%D7%B0",
        "waitUntil": "domcontentloaded",
        "timeout": 30000
      },
      "next": ["wait_search"]
    },
    {
      "id": "wait_search",
      "type": "WaitNode",
      "name": "等待搜索结果加载",
      "config": { "minMs": 3000, "maxMs": 5000 },
      "next": ["extract_merchants"]
    },
    {
      "id": "extract_merchants",
      "type": "PageSnapshotNode",
      "name": "提取商家信息(带去重)",
      "config": {
        "script": "console.log('🔍 提取商家信息并去重...'); const merchants = []; const offerItems = document.querySelectorAll('.sm-offer-item, .offer-item, .sm-offer, [class*=offer]'); console.log('找到 ' + offerItems.length + ' 个商家'); const sentHistory = arguments[0] ? arguments[0].sentHistory || {} : {}; const processedIds = new Set(); offerItems.forEach(function(item, index) { if (index < 10) { const title = item.querySelector('h4, [class*=title], a[title]'); const link = item.querySelector('a[href*=\"1688.com\"]'); const price = item.querySelector('[class*=price], [data-price]'); const image = item.querySelector('img[src]'); const contactButton = item.querySelector('[class*=contact], [class*=chat], [class*=im], [class*=旺旺], .sm-im, .s-im'); const merchantName = item.querySelector('[class*=company], [class*=name], [class*=shop]'); const merchantLink = link ? link.href : null; let merchantId = null; if (merchantLink) { const idMatch = merchantLink.match(/member_id=([\\d]+)/); if (idMatch) merchantId = idMatch[1]; else { const pathMatch = merchantLink.match(/\\/(\\d+)\\.htm/); if (pathMatch) merchantId = pathMatch[1]; } } if (merchantId && !processedIds.has(merchantId) && !sentHistory[merchantId]) { processedIds.add(merchantId); merchants.push({ index: index, merchantId: merchantId, title: title ? title.textContent.trim() : '', merchantName: merchantName ? merchantName.textContent.trim() : '', price: price ? price.textContent.trim() : '', merchantLink: merchantLink, contactLink: contactButton ? contactButton.href || contactButton.getAttribute('data-href') || contactButton.getAttribute('onclick') : null, contactButton: contactButton ? { className: contactButton.className, text: contactButton.textContent, href: contactButton.href } : null, image: image ? image.src : null, isNew: true }); } else if (merchantId) { console.log('商家已处理过或存在于历史记录:', merchantId); } } }); const pagination = document.querySelector('.ui-pagination, .pagination'); let paginationInfo = null; if (pagination) { const currentPage = pagination.querySelector('.ui-page-active, .active, .current'); const nextButton = pagination.querySelector('.ui-page-next, .next, [class*=next]:not(.disabled)'); paginationInfo = { hasPagination: true, currentPage: currentPage ? currentPage.textContent.trim() : '1', hasNextPage: !!nextButton && !nextButton.classList.contains('disabled') }; } else { paginationInfo = { hasPagination: false }; } console.log('去重后提取到 ' + merchants.length + ' 个新商家'); return { success: true, merchants: merchants, totalFound: offerItems.length, duplicatesFiltered: offerItems.length - merchants.length, paginationInfo: paginationInfo, currentUrl: window.location.href, pageTitle: document.title, timestamp: new Date().toISOString() };",
        "saveScreenshots": true
      },
      "next": ["save_batch_data"]
    },
    {
      "id": "save_batch_data",
      "type": "ResultSaverNode",
      "name": "保存批量数据",
      "config": {
        "outputDir": "workflows/records",
        "filenameTemplate": "1688-batch-merchants-{timestamp}.json",
        "includeMetadata": true
      },
      "next": ["start_batch_processing"]
    },
    {
      "id": "start_batch_processing",
      "type": "PageSnapshotNode",
      "name": "开始批量处理",
      "config": {
        "script": "console.log('🚀 开始批量处理商家...'); const merchants = arguments[0] ? arguments[0].merchants || [] : []; console.log('将要处理 ' + merchants.length + ' 个商家'); if (merchants.length === 0) { return { success: false, message: '没有找到需要处理的商家', finished: true }; } return { success: true, merchants: merchants, totalToProcess: merchants.length, currentIndex: 0, timestamp: new Date().toISOString() };",
        "saveScreenshots": false
      },
      "next": ["process_single_merchant"]
    },
    {
      "id": "process_single_merchant",
      "type": "NavigationNode",
      "name": "处理商家 - 导航到聊天",
      "config": {
        "url": "https://air.1688.com/app/ocms-fusion-components-1688/def_cbu_web_im_core/index.html?uid={{merchantName}}&site=cnalichn&fromid=cnalichnviridite",
        "waitUntil": "domcontentloaded",
        "timeout": 15000
      },
      "next": ["wait_chat_ready"]
    },
    {
      "id": "wait_chat_ready",
      "type": "WaitNode",
      "name": "等待聊天页面准备",
      "config": { "minMs": 2000, "maxMs": 3000 },
      "next": ["send_chat_message"]
    },
    {
      "id": "send_chat_message",
      "type": "ChatHighlightOnlyNode1688",
      "name": "发送聊天消息(MOCK)",
      "config": {
        "hostFilter": "air.1688.com",
        "message": "您好，请问这个产品有现货吗？",
        "highlightMs": 2000,
        "mock": true
      },
      "next": ["save_to_history"]
    },
    {
      "id": "save_to_history",
      "type": "PageSnapshotNode",
      "name": "保存到历史记录",
      "config": {
        "script": "console.log('💾 保存到历史记录...'); const merchantData = arguments[0] ? arguments[0].currentMerchant || {} : {}; const sentHistory = JSON.parse(localStorage.getItem('1688_sent_history') || '{}'); const merchantId = merchantData.merchantId; if (merchantId) { sentHistory[merchantId] = { merchantId: merchantId, merchantName: merchantData.merchantName, title: merchantData.title, sentAt: new Date().toISOString(), message: '您好，请问这个产品有现货吗？', status: 'sent' }; localStorage.setItem('1688_sent_history', JSON.stringify(sentHistory)); console.log('已保存商家到历史记录:', merchantId); } return { success: true, merchantId: merchantId, saved: !!merchantId, totalHistoryCount: Object.keys(sentHistory).length, timestamp: new Date().toISOString() };",
        "saveScreenshots": false
      },
      "next": ["wait_between_messages"]
    },
    {
      "id": "wait_between_messages",
      "type": "WaitNode",
      "name": "消息间隔等待",
      "config": { "minMs": 3000, "maxMs": 5000 },
      "next": ["check_next_merchant"]
    },
    {
      "id": "check_next_merchant",
      "type": "PageSnapshotNode",
      "name": "检查是否还有下一个商家",
      "config": {
        "script": "console.log('🔄 检查下一个商家...'); const batchData = arguments[0] ? arguments[0] : {}; const merchants = batchData.merchants || []; const currentIndex = batchData.currentIndex || 0; const nextIndex = currentIndex + 1; if (nextIndex < merchants.length) { console.log('继续处理下一个商家:', nextIndex + '/' + merchants.length); return { success: true, hasMore: true, nextIndex: nextIndex, currentMerchant: merchants[nextIndex], merchants: merchants, processedCount: nextIndex }; } else { console.log('所有商家处理完成'); return { success: true, hasMore: false, processedCount: merchants.length, finished: true }; }",
        "saveScreenshots": false
      },
      "next": ["continue_processing"]
    },
    {
      "id": "continue_processing",
      "type": "NavigationNode",
      "name": "继续处理或结束",
      "config": {
        "url": "{{hasMore ? 'javascript:history.back()' : 'https://www.1688.com/'}}",
        "waitUntil": "domcontentloaded",
        "timeout": 10000
      },
      "next": ["final_check"]
    },
    {
      "id": "final_check",
      "type": "PageSnapshotNode",
      "name": "最终检查",
      "config": {
        "script": "console.log('✅ 最终检查处理状态...'); const historyData = localStorage.getItem('1688_sent_history') || '{}'; const sentHistory = JSON.parse(historyData); console.log('总共发送消息数量:', Object.keys(sentHistory).length); return { success: true, totalSent: Object.keys(sentHistory).length, historyData: sentHistory, sessionCompleted: true, timestamp: new Date().toISOString() };",
        "saveScreenshots": true
      },
      "next": ["save_final_results"]
    },
    {
      "id": "save_final_results",
      "type": "ResultSaverNode",
      "name": "保存最终结果",
      "config": {
        "outputDir": "workflows/records",
        "filenameTemplate": "1688-batch-chat-final-{timestamp}.json",
        "includeMetadata": true
      },
      "next": ["end"]
    },
    {
      "id": "end",
      "type": "EndNode",
      "name": "结束",
      "config": { "cleanup": false, "saveLogs": true }
    }
  ],
  "globalConfig": {
    "logLevel": "info",
    "screenshotOnError": true,
    "autoCleanup": false,
    "parallelExecution": false,
    "timeout": 900000
  }
}