{
  "name": "统一高亮服务集成测试",
  "description": "测试统一高亮服务在1688页面的完整功能，包括锚点、点击、聊天节点的高亮效果",
  "version": "1.0.0",
  "nodes": [
    { "id": "start", "type": "StartNode", "name": "开始", "next": ["ensure_camoufox"] },
    { "id": "ensure_camoufox", "type": "CamoufoxEnsureNode", "name": "Camoufox 校验/安装", "config": {}, "next": ["browser_init"] },
    {
      "id": "browser_init",
      "type": "BrowserInitNode",
      "name": "浏览器初始化",
      "config": {
        "engine": "camoufox",
        "headless": false,
        "viewport": { "width": 1920, "height": 1080 },
        "strictAutomationMitigation": false,
        "extraHeaders": false
      },
      "next": ["load_cookies"]
    },
    {
      "id": "load_cookies",
      "type": "CookieLoaderNode",
      "name": "加载Cookie",
      "config": {
        "cookiePath": "~/.webauto/cookies/1688-domestic.json"
      },
      "next": ["navigate_search"]
    },
    {
      "id": "navigate_search",
      "type": "NavigationNode",
      "name": "导航到1688搜索页",
      "config": {
        "url": "https://s.1688.com/selloffer/offer_search.htm?keywords=%B8%D6%BB%AF%C4%A4",
        "waitUntil": "domcontentloaded",
        "timeout": 30000
      },
      "next": ["test_anchor_highlight"]
    },
    {
      "id": "test_anchor_highlight",
      "type": "AnchorPointNode",
      "name": "测试锚点高亮",
      "config": {
        "selectors": [".sm-offer-item", ".offer-item", "[class*=offer]"],
        "requireVisible": true,
        "maxWaitMs": 10000,
        "pollIntervalMs": 1000,
        "highlight": true,
        "persistHighlight": true,
        "highlightColor": "#ff3b30",
        "highlightLabel": "ANCHOR_TEST",
        "highlightDurationMs": 15000,
        "alias": "testAnchor"
      },
      "next": ["verify_anchor"]
    },
    {
      "id": "verify_anchor",
      "type": "PageSnapshotNode",
      "name": "验证锚点高亮",
      "config": {
        "script": "console.log('🔍 验证统一高亮服务锚点效果...');\\n\\n// 检查统一高亮服务状态\\nconst serviceExists = typeof window.__webautoHighlight !== 'undefined';\\nconst serviceAvailable = serviceExists && typeof window.__webautoHighlight.createHighlight === 'function';\\nconst serviceStats = serviceExists ? window.__webautoHighlight.getStats() : null;\\n\\n// 检查高亮元素\\nconst overlays = document.querySelectorAll('.__webauto_anchor_overlay__');\\nconst labels = document.querySelectorAll('[style*=\\\"position:fixed\\\"][style*=\\\"background:#ff3b30\\\"]');\\nconst outlined = document.querySelectorAll('[style*=\\\"outline\\\"][style*=\\\"#ff3b30\\\"]');\\n\\n// 创建验证结果面板\\nconst panel = document.createElement('div');\\npanel.innerHTML = `\\n  <h2 style=\\\"color: #ff3b30; margin: 0 0 10px 0;\\\">🎯 统一高亮服务验证结果</h2>\\n  <p><strong>服务状态:</strong> ${serviceAvailable ? '✅ 可用' : '❌ 不可用'}</p>\\n  <p><strong>活跃高亮:</strong> ${serviceStats ? serviceStats.activeHighlights : 0} 个</p>\\n  <p><strong>覆盖层:</strong> ${overlays.length} 个</p>\\n  <p><strong>标签:</strong> ${labels.length} 个</p>\\n  <p><strong>轮廓元素:</strong> ${outlined.length} 个</p>\\n  <hr style=\\\"margin: 10px 0;\\\">\\n  <p style=\\\"color: #007aff; font-size: 14px;\\\">如果看到红色高亮效果，说明统一高亮服务工作正常！</p>\\n  <p style=\\\"color: #666; font-size: 12px;\\\">高亮将保持15秒后自动消失</p>\\n`;\\n\\npanel.style.cssText = `\\n  position: fixed;\\n  top: 80px;\\n  right: 50px;\\n  background: rgba(255, 255, 255, 0.95);\\n  border: 3px solid #ff3b30;\\n  padding: 20px;\\n  border-radius: 10px;\\n  box-shadow: 0 0 25px rgba(255, 59, 48, 0.3);\\n  z-index: 2147483647;\\n  font-family: Arial, sans-serif;\\n  font-size: 14px;\\n  min-width: 300px;\\n  backdrop-filter: blur(10px);\\n`;\\n\\ndocument.body.appendChild(panel);\\n\\n// 15秒后移除面板\\nsetTimeout(() => {\\n  try { panel.remove(); } catch {}\\n}, 15000);\\n\\nreturn {\\n  success: true,\\n  serviceExists,\\n  serviceAvailable,\\n  activeHighlights: serviceStats ? serviceStats.activeHighlights : 0,\\n  overlays: overlays.length,\\n  labels: labels.length,\\n  outlined: outlined.length,\\n  timestamp: new Date().toISOString()\\n};",
        "saveScreenshots": true
      },
      "next": ["test_optional_click"]
    },
    {
      "id": "test_optional_click",
      "type": "EventDrivenOptionalClickNode",
      "name": "测试可选点击高亮",
      "config": {
        "selectors": ["button", ".next-btn", "[role='button']"],
        "maxWaitMs": 8000,
        "highlight": true,
        "persistHighlight": true,
        "highlightColor": "#34c759",
        "highlightDurationMs": 12000,
        "click": false,
        "alias": "optionalClickTest"
      },
      "next": ["verify_click_highlight"]
    },
    {
      "id": "verify_click_highlight",
      "type": "PageSnapshotNode",
      "name": "验证点击高亮",
      "config": {
        "script": "console.log('🔍 验证点击目标高亮效果...');\\n\\n// 检查绿色高亮元素\\nconst greenOverlays = document.querySelectorAll('.__webauto_opt_overlay__');\\nconst greenElements = document.querySelectorAll('[style*=\\\"#34c759\\\"][style*=\\\"outline\\\"][style*=\\\"important\\\"]');\\n\\n// 创建验证结果\\nconst panel = document.createElement('div');\\npanel.innerHTML = `\\n  <h3 style=\\\"color: #34c759; margin: 0 0 10px 0;\\\">🎯 点击目标高亮验证</h3>\\n  <p><strong>绿色覆盖层:</strong> ${greenOverlays.length} 个</p>\\n  <p><strong>绿色轮廓元素:</strong> ${greenElements.length} 个</p>\\n  <p style=\\\"color: #34c759;\\\">如果看到绿色高亮，说明点击节点高亮正常！</p>\\n`;\\n\\npanel.style.cssText = `\\n  position: fixed;\\n  top: 300px;\\n  right: 50px;\\n  background: rgba(52, 199, 89, 0.95);\\n  color: white;\\n  padding: 15px;\\n  border-radius: 8px;\\n  border: 2px solid #32d74b;\\n  z-index: 2147483647;\\n  font-family: Arial, sans-serif;\\n  font-size: 12px;\\n`;\\n\\ndocument.body.appendChild(panel);\\n\\nsetTimeout(() => {\\n  try { panel.remove(); } catch {}\\n}, 12000);\\n\\nreturn {\\n  success: true,\\n  greenOverlays: greenOverlays.length,\\n  greenElements: greenElements.length,\\n  timestamp: new Date().toISOString()\\n};",
        "saveScreenshots": true
      },
      "next": ["cleanup_highlights"]
    },
    {
      "id": "cleanup_highlights",
      "type": "PageSnapshotNode",
      "name": "清理并统计高亮",
      "config": {
        "script": "console.log('🧹 清理高亮并统计结果...');\\n\\n// 统计所有高亮元素\\nconst allOverlays = document.querySelectorAll('[class*=\\\"__webauto_highlight_overlay__\\\"]');\\nconst allLabels = document.querySelectorAll('[class*=\\\"__webauto_highlight_overlay__\\\"]:not([style*=\\\"border\\\"])');\\nconst outlinedElements = document.querySelectorAll('[style*=\\\"outline\\\"][style*=\\\"important\\\"][style*=\\\"solid\\\"]:not([class*=\\\"__webauto\\\"])');\\n\\n// 使用统一服务清理（如果可用）\\nlet cleanupSuccess = false;\\nif (typeof window.__webautoHighlight !== 'undefined' && window.__webautoHighlight.removeAllHighlights) {\\n  try {\\n    window.__webautoHighlight.removeAllHighlights();\\n    cleanupSuccess = true;\\n  } catch (e) {\\n    console.warn('统一服务清理失败:', e.message);\\n  }\\n}\\n\\n// 创建最终结果报告\\nconst reportPanel = document.createElement('div');\\nreportPanel.innerHTML = `\\n  <h2 style=\\\"color: #007aff; margin: 0 0 15px 0;\\\">📊 统一高亮服务测试报告</h2>\\n  <div style=\\\"background: rgba(0,0,0,0.05); padding: 10px; border-radius: 5px; margin: 10px 0;\\\">\\n    <h4 style=\\\"margin: 5px 0; color: #333;\\\">高亮统计:</h4>\\n    <p>总覆盖层: ${allOverlays.length} 个</p>\\n    <p>总标签: ${allLabels.length} 个</p>\\n    <p>轮廓元素: ${outlinedElements.length} 个</p>\\n    <p>统一服务清理: ${cleanupSuccess ? '✅ 成功' : '❌ 失败'}</p>\\n  </div>\\n  <div style=\\\"background: rgba(0,122,255,0.1); padding: 10px; border-radius: 5px;\\\">\\n    <h4 style=\\\"margin: 5px 0; color: #007aff;\\\">测试结论:</h4>\\n    <p style=\\\"color: #007aff; font-weight: bold;\\\">✅ 统一高亮服务集成测试完成</p>\\n    <p>如果页面有红色和绿色高亮效果，说明功能正常工作！</p>\\n  </div>\\n`;\\n\\nreportPanel.style.cssText = `\\n  position: fixed;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  background: white;\\n  border: 3px solid #007aff;\\n  padding: 25px;\\n  border-radius: 15px;\\n  box-shadow: 0 0 30px rgba(0, 122, 255, 0.3);\\n  z-index: 2147483647;\\n  font-family: Arial, sans-serif;\\n  font-size: 14px;\\n  max-width: 400px;\\n  text-align: center;\\n`;\\n\\ndocument.body.appendChild(reportPanel);\\n\\n// 20秒后移除报告\\nsetTimeout(() => {\\n  try { reportPanel.remove(); } catch {}\\n}, 20000);\\n\\nreturn {\\n  success: true,\\n  totalOverlays: allOverlays.length,\\n  totalLabels: allLabels.length,\\n  outlinedElements: outlinedElements.length,\\n  cleanupSuccess,\\n  testCompleted: true,\\n  timestamp: new Date().toISOString()\\n};",
        "saveScreenshots": true
      },
      "next": ["end"]
    },
    {
      "id": "end",
      "type": "EndNode",
      "name": "结束",
      "config": { "cleanup": false, "saveLogs": true }
    }
  ],
  "globalConfig": {
    "logLevel": "info",
    "screenshotOnError": true,
    "autoCleanup": false,
    "parallelExecution": false,
    "timeout": 180000
  }
}