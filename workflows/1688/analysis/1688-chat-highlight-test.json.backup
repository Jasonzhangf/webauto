{
  "name": "1688聊天高亮测试",
  "description": "专门测试ChatHighlightOnlyNode1688的高亮功能，确保可以看到高亮效果",
  "version": "1.0.0",
  "preflows": ["1688-login-preflow"],
  "nodes": [
    { "id": "start", "type": "StartNode", "name": "开始", "next": ["attach"] },
    {
      "id": "attach",
      "type": "AttachSessionNode",
      "name": "会话接力",
      "config": {},
      "next": ["navigate_to_chat"]
    },
    {
      "id": "navigate_to_chat",
      "type": "NavigationNode",
      "name": "导航到聊天页面",
      "config": {
        "url": "https://air.1688.com/app/ocms-fusion-components-1688/def_cbu_web_im_core/index.html?uid=%E6%B8%A9%E5%B7%9D%E7%9F%97%E7%AB%8B%E8%B4%B8%E6%98%93%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%E7%89%9B&site=cnalichn&fromid=cnalichnviridite",
        "waitUntil": "domcontentloaded",
        "timeout": 30000
      },
      "next": ["wait_chat_load"]
    },
    {
      "id": "wait_chat_load",
      "type": "WaitNode",
      "name": "等待聊天页面完全加载",
      "config": { "minMs": 5000, "maxMs": 8000 },
      "next": ["check_chat_ready"]
    },
    {
      "id": "check_chat_ready",
      "type": "PageSnapshotNode",
      "name": "检查聊天页面状态",
      "config": {
        "script": "console.log('🔍 检查聊天页面状态...'); const pageTitle = document.title; const pageUrl = window.location.href; const hasChatInterface = document.querySelector('textarea, input[type=text], [contenteditable]') !== null; const hasSendButton = document.querySelector('button[type=submit], [class*=send], [class*=send-btn]') !== null; const inputElements = document.querySelectorAll('textarea, input[type=text], [contenteditable]'); const sendButtons = document.querySelectorAll('button[type=submit], [class*=send], [class*=send-btn]'); console.log('页面标题:', pageTitle); console.log('当前URL:', pageUrl); console.log('是否有聊天界面:', hasChatInterface); console.log('是否有发送按钮:', hasSendButton); console.log('输入元素数量:', inputElements.length); console.log('发送按钮数量:', sendButtons.length); inputElements.forEach((el, i) => console.log(`输入元素${i+1}:`, el.tagName, el.className, el.placeholder)); sendButtons.forEach((el, i) => console.log(`发送按钮${i+1}:`, el.tagName, el.className, el.textContent)); return { success: hasChatInterface && hasSendButton, pageTitle, pageUrl, hasChatInterface, hasSendButton, inputCount: inputElements.length, sendButtonCount: sendButtons.length, timestamp: new Date().toISOString() };",
        "saveScreenshots": true
      },
      "next": ["highlight_test"]
    },
    {
      "id": "highlight_test",
      "type": "ChatHighlightOnlyNode1688",
      "name": "聊天高亮测试（长时间）",
      "config": {
        "hostFilter": "air.1688.com",
        "message": "您好，请问这个产品有现货吗？现在下单有优惠吗？",
        "highlightMs": 10000,
        "mock": true,
        "forceHighlight": true
      },
      "next": ["wait_highlight"]
    },
    {
      "id": "wait_highlight",
      "type": "WaitNode",
      "name": "等待高亮完成",
      "config": { "minMs": 12000, "maxMs": 15000 },
      "next": ["verify_highlight"]
    },
    {
      "id": "verify_highlight",
      "type": "PageSnapshotNode",
      "name": "验证高亮效果",
      "config": {
        "script": "console.log('✅ 验证高亮效果...'); const highlightedElements = document.querySelectorAll('[style*=\"background\"], [style*=\"border\"], [style*=\"outline\"], [class*=\"highlight\"], [class*=\"selected\"]'); console.log('找到高亮元素数量:', highlightedElements.length); highlightedElements.forEach((el, i) => { const styles = window.getComputedStyle(el); console.log(`高亮元素${i+1}:`, { tagName: el.tagName, className: el.className, backgroundColor: styles.backgroundColor, borderColor: styles.borderColor, outline: styles.outline }); }); const inputElements = document.querySelectorAll('textarea, input[type=text], [contenteditable]'); const sendButtons = document.querySelectorAll('button[type=submit], [class*=send], [class*=send-btn]'); console.log('验证后输入元素数量:', inputElements.length); console.log('验证后发送按钮数量:', sendButtons.length); return { success: true, highlightedCount: highlightedElements.length, inputCount: inputElements.length, sendButtonCount: sendButtons.length, pageUrl: window.location.href, timestamp: new Date().toISOString() };",
        "saveScreenshots": true
      },
      "next": ["final_snapshot"]
    },
    {
      "id": "final_snapshot",
      "type": "PageSnapshotNode",
      "name": "最终页面快照",
      "config": {
        "script": "console.log('📸 最终页面快照...'); return { success: true, message: '高亮测试完成，请检查浏览器中的高亮效果', pageUrl: window.location.href, pageTitle: document.title, timestamp: new Date().toISOString() };",
        "saveScreenshots": true
      },
      "next": ["save_results"]
    },
    {
      "id": "save_results",
      "type": "ResultSaverNode",
      "name": "保存测试结果",
      "config": {
        "outputDir": "workflows/records",
        "filenameTemplate": "1688-highlight-test-{timestamp}.json",
        "includeMetadata": true
      },
      "next": ["end"]
    },
    {
      "id": "end",
      "type": "EndNode",
      "name": "保持页面打开观察高亮",
      "config": { "cleanup": false, "saveLogs": true }
    }
  ],
  "globalConfig": {
    "logLevel": "info",
    "screenshotOnError": true,
    "autoCleanup": false,
    "parallelExecution": false,
    "timeout": 300000
  }
}