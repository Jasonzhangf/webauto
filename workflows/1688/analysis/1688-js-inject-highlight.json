{
  "name": "1688 JavaScript注入高亮测试",
  "description": "直接在页面中注入JavaScript代码实现强制高亮效果",
  "version": "1.0.0",
  "preflows": ["1688-login-preflow"],
  "nodes": [
    { "id": "start", "type": "StartNode", "name": "开始", "next": ["attach"] },
    {
      "id": "attach",
      "type": "AttachSessionNode",
      "name": "会话接力",
      "config": {},
      "next": ["navigate_search"]
    },
    {
      "id": "navigate_search",
      "type": "NavigationNode",
      "name": "导航到搜索结果页",
      "config": {
        "url": "https://s.1688.com/selloffer/offer_search.htm?keywords=%B7%FE%D7%B0",
        "waitUntil": "domcontentloaded",
        "timeout": 30000
      },
      "next": ["wait_search"]
    },
    {
      "id": "wait_search",
      "type": "WaitNode",
      "name": "等待搜索结果完全加载",
      "config": { "minMs": 3000, "maxMs": 5000 },
      "next": ["inject_highlight_script"]
    },
    {
      "id": "inject_highlight_script",
      "type": "PageSnapshotNode",
      "name": "注入高亮JavaScript",
      "config": {
        "script": "// 创建一个强制高亮函数\nfunction forceHighlight() {\n  console.log('🔥 开始强制高亮...');\n  \n  // 1. 修改整个页面背景色\n  document.body.style.backgroundColor = 'rgba(255, 255, 0, 0.5)';\n  document.body.style.transition = 'background-color 0.5s';\n  \n  // 2. 添加顶部巨大提示条\n  const topAlert = document.createElement('div');\n  topAlert.id = 'highlight-alert-top';\n  topAlert.innerHTML = '<h1 style=\"background:linear-gradient(45deg, #ff0000, #ff6600);color:white;padding:20px;font-size:36px;position:fixed;top:0;left:0;width:100%;z-index:2147483647;text-align:center;font-weight:bold;border:5px solid black;box-shadow:0 5px 20px rgba(0,0,0,0.5);\">🔥 高亮测试正在运行 🔥</h1>';\n  document.body.appendChild(topAlert);\n  \n  // 3. 高亮所有可能的商家容器\n  const merchantSelectors = [\n    '.sm-offer-item', \n    '.offer-item', \n    '.sm-offer', \n    '[class*=\"offer\"]',\n    'div[class*=\"sm-offer\"]',\n    'div[class*=\"offer-item\"]',\n    'article',\n    'section[class*=\"offer\"]'\n  ];\n  \n  let merchantCount = 0;\n  merchantSelectors.forEach(selector => {\n    try {\n      const elements = document.querySelectorAll(selector);\n      console.log(`选择器 ${selector}: 找到 ${elements.length} 个元素`);\n      \n      elements.forEach((el, index) => {\n        if (index < 10) {\n          // 强制设置样式，使用!important确保不被覆盖\n          el.style.setProperty('border', '5px solid #ff0000', 'important');\n          el.style.setProperty('background', 'linear-gradient(135deg, rgba(255,0,0,0.3), rgba(255,100,0,0.3))', 'important');\n          el.style.setProperty('box-shadow', '0 0 20px rgba(255,0,0,0.8), inset 0 0 10px rgba(255,255,0,0.5)', 'important');\n          el.style.setProperty('z-index', '2147483640', 'important');\n          el.style.setProperty('position', 'relative', 'important');\n          el.style.setProperty('transform', 'scale(1.02)', 'important');\n          el.style.setProperty('border-radius', '10px', 'important');\n          \n          // 添加商家标记\n          const merchantLabel = document.createElement('div');\n          merchantLabel.textContent = `商家容器 ${++merchantCount}`;\n          merchantLabel.style.cssText = `\n            position: absolute;\n            top: 0;\n            left: 0;\n            background: linear-gradient(45deg, #ffff00, #ff9900);\n            color: #ff0000;\n            font-weight: bold;\n            font-size: 16px;\n            padding: 8px 12px;\n            z-index: 2147483646;\n            border: 3px solid #ff0000;\n            border-radius: 0 0 10px 0;\n            box-shadow: 2px 2px 10px rgba(0,0,0,0.5);\n            font-family: Arial, sans-serif;\n            text-shadow: 1px 1px 2px rgba(255,255,255,0.8);\n            transform: rotate(-5deg);\n          `;\n          el.appendChild(merchantLabel);\n        }\n      });\n    } catch (e) {\n      console.error(`选择器 ${selector} 执行出错:`, e);\n    }\n  });\n  \n  // 4. 高亮所有可能的联系方式\n  const contactSelectors = [\n    '[class*=\"contact\"]', \n    '[class*=\"chat\"]', \n    '[class*=\"im\"]', \n    '[class*=\"旺旺\"]', \n    '.sm-im', \n    '.s-im',\n    'a[class*=\"contact\"]',\n    'button[class*=\"chat\"]',\n    'div[class*=\"im\"]',\n    'span[class*=\"chat\"]'\n  ];\n  \n  let contactCount = 0;\n  contactSelectors.forEach(selector => {\n    try {\n      const elements = document.querySelectorAll(selector);\n      console.log(`联系方式选择器 ${selector}: 找到 ${elements.length} 个元素`);\n      \n      elements.forEach((el, index) => {\n        if (index < 15) {\n          // 强制设置样式\n          el.style.setProperty('border', '4px solid #0066ff', 'important');\n          el.style.setProperty('background', 'linear-gradient(135deg, rgba(0,100,255,0.4), rgba(0,200,255,0.4))', 'important');\n          el.style.setProperty('box-shadow', '0 0 15px rgba(0,100,255,0.8), inset 0 0 8px rgba(0,255,255,0.6)', 'important');\n          el.style.setProperty('z-index', '2147483645', 'important');\n          el.style.setProperty('position', 'relative', 'important');\n          el.style.setProperty('transform', 'scale(1.1)', 'important');\n          el.style.setProperty('border-radius', '8px', 'important');\n          el.style.setProperty('animation', 'pulse 1s infinite', 'important');\n          \n          // 添加联系方式标记\n          const contactLabel = document.createElement('div');\n          contactLabel.textContent = `旺旺 ${++contactCount}`;\n          contactLabel.style.cssText = `\n            position: absolute;\n            top: 0;\n            right: 0;\n            background: linear-gradient(45deg, #00ffff, #0099ff);\n            color: #0000ff;\n            font-weight: bold;\n            font-size: 14px;\n            padding: 6px 10px;\n            z-index: 2147483647;\n            border: 3px solid #0066ff;\n            border-radius: 0 0 0 8px;\n            box-shadow: 2px 2px 8px rgba(0,0,0,0.5);\n            font-family: Arial, sans-serif;\n            text-shadow: 1px 1px 2px rgba(255,255,255,0.9);\n            transform: rotate(5deg);\n          `;\n          el.appendChild(contactLabel);\n        }\n      });\n    } catch (e) {\n      console.error(`联系方式选择器 ${selector} 执行出错:`, e);\n    }\n  });\n  \n  // 5. 添加CSS动画\n  const style = document.createElement('style');\n  style.textContent = `\n    @keyframes pulse {\n      0% { box-shadow: 0 0 15px rgba(0,100,255,0.8), inset 0 0 8px rgba(0,255,255,0.6); }\n      50% { box-shadow: 0 0 25px rgba(0,100,255,1), inset 0 0 12px rgba(0,255,255,0.8); }\n      100% { box-shadow: 0 0 15px rgba(0,100,255,0.8), inset 0 0 8px rgba(0,255,255,0.6); }\n    }\n  `;\n  document.head.appendChild(style);\n  \n  // 6. 添加底部统计信息\n  const statsBar = document.createElement('div');\n  statsBar.id = 'highlight-stats';\n  statsBar.innerHTML = `\n    <div style=\"background:linear-gradient(45deg, #000000, #333333);color:#00ff00;padding:15px;position:fixed;bottom:0;left:0;width:100%;z-index:2147483647;font-size:18px;text-align:center;font-weight:bold;border-top:5px solid #00ff00;box-shadow:0 -5px 20px rgba(0,0,0,0.5);\">\n      ✅ 高亮统计: 找到 ${merchantCount} 个商家容器 | ${contactCount} 个旺旺联系方式 | 效果应该非常明显！\n    </div>\n  `;\n  document.body.appendChild(statsBar);\n  \n  console.log(`✅ 强制高亮完成! 商家: ${merchantCount}, 联系方式: ${contactCount}`);\n  \n  // 7. 添加闪烁效果\n  setInterval(() => {\n    const alert = document.getElementById('highlight-alert-top');\n    if (alert) {\n      alert.style.background = alert.style.background.includes('ff0000') ? \n        'linear-gradient(45deg, #ff6600, #ff0000)' : 'linear-gradient(45deg, #ff0000, #ff6600)';\n    }\n  }, 1000);\n  \n  return { merchantCount, contactCount, success: true };\n}\n\n// 立即执行高亮\nforceHighlight();\n\n// 3秒后再执行一次，确保页面加载完成\nsetTimeout(forceHighlight, 3000);\n\n// 如果页面是动态加载的，监听变化\nconst observer = new MutationObserver(() => {\n  console.log('检测到页面变化，重新高亮...');\n  forceHighlight();\n});\n\nobserver.observe(document.body, { childList: true, subtree: true });",
        "saveScreenshots": true
      },
      "next": ["keep_highlight"]
    },
    {
      "id": "keep_highlight",
      "type": "WaitNode",
      "name": "保持高亮30秒便于观察",
      "config": { "minMs": 30000, "maxMs": 35000 },
      "next": ["end"]
    },
    {
      "id": "end",
      "type": "EndNode",
      "name": "结束测试（保持页面打开）",
      "config": { "cleanup": false, "saveLogs": true }
    }
  ],
  "globalConfig": {
    "logLevel": "info",
    "screenshotOnError": true,
    "autoCleanup": false,
    "parallelExecution": false,
    "timeout": 300000
  }
}