{
  "name": "1688钢化膜搜索工作流",
  "description": "搜索钢化膜并打开第一条商家链接",
  "version": "1.0.0",
  "preflows": ["1688-login-preflow"],
  "nodes": [
    { "id": "start", "type": "StartNode", "name": "开始", "next": ["attach"] },
    {
      "id": "attach",
      "type": "AttachSessionNode",
      "name": "会话接力",
      "config": {},
      "next": ["navigate_search"]
    },
    {
      "id": "navigate_search",
      "type": "NavigationNode",
      "name": "导航到钢化膜搜索页",
      "config": {
        "url": "https://s.1688.com/selloffer/offer_search.htm?keywords=%B8%D6%BB%AF%C4%A4",
        "waitUntil": "domcontentloaded",
        "timeout": 30000
      },
      "next": ["wait_search"]
    },
    {
      "id": "wait_search",
      "type": "WaitNode",
      "name": "等待搜索结果加载",
      "config": { "minMs": 3000, "maxMs": 5000 },
      "next": ["extract_results"]
    },
    {
      "id": "extract_results",
      "type": "PageSnapshotNode",
      "name": "提取搜索结果",
      "config": {
        "script": "console.log('🔍 提取1688钢化膜搜索结果...'); const offerItems = document.querySelectorAll('.sm-offer-item, .offer-item, .sm-offer, [class*=offer]'); console.log('找到 ' + offerItems.length + ' 个商品项'); let merchantLinks = []; let merchantTitles = []; if (offerItems.length > 0) { for (let i = 0; i < Math.min(20, offerItems.length); i++) { const item = offerItems[i]; const link = item.querySelector('a[href*=\"1688.com\"]'); const title = item.querySelector('h4, [class*=title], a[title]'); if (link && link.href) { merchantLinks.push(link.href); merchantTitles.push(title ? title.textContent.trim() : ''); } } } console.log('🔗 提取的商家链接数量:', merchantLinks.length); console.log('📝 前3个商品标题:', merchantTitles.slice(0, 3)); return { success: true, merchantLinks: merchantLinks, merchantTitles: merchantTitles, totalFound: merchantLinks.length, currentUrl: window.location.href, pageTitle: document.title, timestamp: new Date().toISOString() };",
        "saveScreenshots": true
      },
      "next": ["open_first"]
    },
      {
      "id": "open_first",
      "type": "NavigationNode",
      "name": "打开第一条商家链接",
      "config": {
        "url": "{{previous.merchantLinks[0]}}",
        "waitUntil": "domcontentloaded",
        "timeout": 30000
      },
      "next": ["wait_first_page"]
    },
    {
      "id": "wait_first_page",
      "type": "WaitNode",
      "name": "等待商家页面加载",
      "config": { "minMs": 2000, "maxMs": 3000 },
      "next": ["analyze_first_page"]
    },
    {
      "id": "analyze_first_page",
      "type": "PageSnapshotNode",
      "name": "分析商家页面",
      "config": {
        "script": "console.log('🔍 分析第一条商家页面...'); const pageInfo = { url: window.location.href, title: document.title, timestamp: new Date().toISOString() }; const isMerchantPage = window.location.href.includes('1688.com') && (window.location.href.includes('/offer/') || window.location.href.includes('/company/') || window.location.href.includes('member_id=')); const merchantInfo = {}; const companyTitle = document.querySelector('[class*=company], [class*=title], h1'); const contactInfo = document.querySelector('[class*=contact], [class*=phone], [class*=tel]'); const productImages = document.querySelectorAll('img[src*=\"1688\"]'); merchantInfo.companyName = companyTitle ? companyTitle.textContent.trim() : ''; merchantInfo.hasContact = !!contactInfo; merchantInfo.imageCount = productImages.length; console.log('📋 商家页面信息:', { isMerchantPage, url: pageInfo.url, title: pageInfo.title, merchantInfo }); return { success: true, pageInfo: pageInfo, merchantInfo: merchantInfo, isMerchantPage: isMerchantPage };",
        "saveScreenshots": true
      },
      "next": ["save_results"]
    },
    {
      "id": "save_results",
      "type": "ResultSaverNode",
      "name": "保存完整结果",
      "config": {
        "outputDir": "workflows/records",
        "filenameTemplate": "1688-glass-film-simple-{timestamp}.json",
        "includeMetadata": true,
        "mergeData": true
      },
      "next": ["end"]
    },
    {
      "id": "end",
      "type": "EndNode",
      "name": "结束",
      "config": { "cleanup": false, "saveLogs": true }
    }
  ],
  "globalConfig": {
    "logLevel": "info",
    "screenshotOnError": true,
    "autoCleanup": false,
    "parallelExecution": false,
    "timeout": 180000
  }
}