{
  "name": "1688提取3个商家并逐一验证",
  "description": "提取3个商家信息，然后逐一打开聊天页面验证准确性",
  "version": "1.0.0",
  "preflows": ["1688-login-preflow"],
  "nodes": [
    { "id": "start", "type": "StartNode", "name": "开始", "next": ["attach"] },
    {
      "id": "attach",
      "type": "AttachSessionNode",
      "name": "会话接力",
      "config": {},
      "next": ["navigate_search"]
    },
    {
      "id": "navigate_search",
      "type": "NavigationNode",
      "name": "导航到搜索结果页",
      "config": {
        "url": "https://s.1688.com/selloffer/offer_search.htm?keywords=%B7%FE%D7%B0",
        "waitUntil": "domcontentloaded",
        "timeout": 30000
      },
      "next": ["wait_search"]
    },
    {
      "id": "wait_search",
      "type": "WaitNode",
      "name": "等待搜索结果完全加载",
      "config": { "minMs": 3000, "maxMs": 5000 },
      "next": ["extract_3_merchants"]
    },
    {
      "id": "extract_3_merchants",
      "type": "PageSnapshotNode",
      "name": "提取前3个商家详细信息",
      "config": {
        "script": "console.log('🔍 开始提取前3个商家详细信息...'); const merchants = []; const offerItems = document.querySelectorAll('.sm-offer-item, .offer-item, .sm-offer, [class*=offer]'); console.log(`找到 ${offerItems.length} 个商家容器，提取前3个`); for (let i = 0; i < Math.min(3, offerItems.length); i++) { const item = offerItems[i]; console.log(`\\n=== 提取商家 ${i + 1} ===`); // 提取商家基本信息 const title = item.querySelector('h4, [class*=title], a[title]'); const link = item.querySelector('a[href*=\"1688.com\"]'); const price = item.querySelector('[class*=price], [data-price]'); const image = item.querySelector('img[src]'); const merchantName = item.querySelector('[class*=company], [class*=name], [class*=shop]'); const merchantLink = link ? link.href : null; // 提取旺旺联系方式 const wangwangSpan = item.querySelector('span.J_WangWang'); const wangwangLink = wangwangSpan ? wangwangSpan.querySelector('a.ww-link') : null; const wangwangText = wangwangSpan ? wangwangSpan.textContent.trim() : ''; // 提取商家ID let merchantId = null; if (merchantLink) { const idMatch = merchantLink.match(/member_id=([\\\\d]+)/); if (idMatch) merchantId = idMatch[1]; else { const pathMatch = merchantLink.match(/\\\\/(\\\\d+)\\\\.htm/); if (pathMatch) merchantId = pathMatch[1]; } } // 提取旺旺聊天链接 let chatUrl = null; if (wangwangLink && wangwangLink.href) { chatUrl = wangwangLink.href; // 解码URL中的商家名称 const urlParams = new URLSearchParams(chatUrl.split('?')[1]); const uid = urlParams.get('uid'); if (uid) { console.log(`  URL中的商家名称: ${decodeURIComponent(uid)}`); } } // 记录详细信息 console.log(`  标题: ${title ? title.textContent.trim() : '未找到'}`); console.log(`  商家名称: ${merchantName ? merchantName.textContent.trim() : '未找到'}`); console.log(`  价格: ${price ? price.textContent.trim() : '未找到'}`); console.log(`  商家ID: ${merchantId}`); console.log(`  商家链接: ${merchantLink}`); console.log(`  旺旺文本: ${wangwangText}`); console.log(`  旺旺聊天链接: ${chatUrl}`); console.log(`  有图片: ${!!image}`); // 构建商家数据 const merchantData = { index: i + 1, merchantId: merchantId, title: title ? title.textContent.trim() : '', merchantName: merchantName ? merchantName.textContent.trim() : '', price: price ? price.textContent.trim() : '', merchantLink: merchantLink, chatUrl: chatUrl, wangwangText: wangwangText, hasImage: !!image, imageUrl: image ? image.src : null, wangwangData: wangwangSpan ? { className: wangwangSpan.className, dataNick: wangwangSpan.getAttribute('data-nick'), dataIcon: wangwangSpan.getAttribute('data-icon'), dataEncode: wangwangSpan.getAttribute('data-encode') } : null }; merchants.push(merchantData); console.log(`  ✅ 商家 ${i + 1} 提取完成`); } console.log(`\\n📊 总共提取了 ${merchants.length} 个商家`); return { success: true, merchants: merchants, totalFound: offerItems.length, extractedCount: merchants.length, timestamp: new Date().toISOString() };",
        "saveScreenshots": true
      },
      "next": ["save_merchant_data"]
    },
    {
      "id": "save_merchant_data",
      "type": "ResultSaverNode",
      "name": "保存商家数据",
      "config": {
        "outputDir": "archive/workflow-records",
        "filenameTemplate": "1688-extracted-merchants-{timestamp}.json",
        "includeMetadata": true
      },
      "next": ["verify_first_merchant"]
    },
    {
      "id": "verify_first_merchant",
      "type": "NavigationNode",
      "name": "验证第1个商家聊天页面",
      "config": {
        "url": "{{merchants[0].chatUrl || merchants[0].merchantLink}}",
        "waitUntil": "domcontentloaded",
        "timeout": 20000
      },
      "next": ["wait_first_chat"]
    },
    {
      "id": "wait_first_chat",
      "type": "WaitNode",
      "name": "等待第1个聊天页面加载",
      "config": { "minMs": 3000, "maxMs": 5000 },
      "next": ["verify_first_chat"]
    },
    {
      "id": "verify_first_chat",
      "type": "PageSnapshotNode",
      "name": "验证第1个聊天页面信息",
      "config": {
        "script": "console.log('🔍 验证第1个商家聊天页面...'); const currentUrl = window.location.href; const pageTitle = document.title; const isInChat = currentUrl.includes('air.1688.com') || currentUrl.includes('def_cbu_web_im'); console.log(`当前URL: ${currentUrl}`); console.log(`页面标题: ${pageTitle}`); console.log(`是否在聊天页面: ${isInChat}`); // 检查聊天界面元素 const chatInterface = document.querySelector('textarea, input[type=\"text\"], [contenteditable], .chat-input, .message-input'); const sendButton = document.querySelector('button[type=\"submit\"], [class*=\"send\"], [class*=\"send-btn\"]'); console.log(`找到聊天输入框: ${!!chatInterface}`); console.log(`找到发送按钮: ${!!sendButton}`); // 提取当前页面的商家信息 const merchantInfo = { currentUrl: currentUrl, pageTitle: pageTitle, isInChat: isInChat, hasChatInterface: !!chatInterface, hasSendButton: !!sendButton, timestamp: new Date().toISOString() }; return { success: isInChat, verification: merchantInfo, merchantIndex: 1, timestamp: new Date().toISOString() };",
        "saveScreenshots": true
      },
      "next": ["back_to_search"]
    },
    {
      "id": "back_to_search",
      "type": "NavigationNode",
      "name": "返回搜索页面",
      "config": {
        "url": "https://s.1688.com/selloffer/offer_search.htm?keywords=%B7%FE%D7%B0",
        "waitUntil": "domcontentloaded",
        "timeout": 15000
      },
      "next": ["verify_second_merchant"]
    },
    {
      "id": "verify_second_merchant",
      "type": "NavigationNode",
      "name": "验证第2个商家聊天页面",
      "config": {
        "url": "{{merchants[1].chatUrl || merchants[1].merchantLink}}",
        "waitUntil": "domcontentloaded",
        "timeout": 20000
      },
      "next": ["wait_second_chat"]
    },
    {
      "id": "wait_second_chat",
      "type": "WaitNode",
      "name": "等待第2个聊天页面加载",
      "config": { "minMs": 3000, "maxMs": 5000 },
      "next": ["verify_second_chat"]
    },
    {
      "id": "verify_second_chat",
      "type": "PageSnapshotNode",
      "name": "验证第2个聊天页面信息",
      "config": {
        "script": "console.log('🔍 验证第2个商家聊天页面...'); const currentUrl = window.location.href; const pageTitle = document.title; const isInChat = currentUrl.includes('air.1688.com') || currentUrl.includes('def_cbu_web_im'); console.log(`当前URL: ${currentUrl}`); console.log(`页面标题: ${pageTitle}`); console.log(`是否在聊天页面: ${isInChat}`); const merchantInfo = { currentUrl: currentUrl, pageTitle: pageTitle, isInChat: isInChat, timestamp: new Date().toISOString() }; return { success: isInChat, verification: merchantInfo, merchantIndex: 2, timestamp: new Date().toISOString() };",
        "saveScreenshots": true
      },
      "next": ["back_to_search_2"]
    },
    {
      "id": "back_to_search_2",
      "type": "NavigationNode",
      "name": "返回搜索页面",
      "config": {
        "url": "https://s.1688.com/selloffer/offer_search.htm?keywords=%B7%FE%D7%B0",
        "waitUntil": "domcontentloaded",
        "timeout": 15000
      },
      "next": ["verify_third_merchant"]
    },
    {
      "id": "verify_third_merchant",
      "type": "NavigationNode",
      "name": "验证第3个商家聊天页面",
      "config": {
        "url": "{{merchants[2].chatUrl || merchants[2].merchantLink}}",
        "waitUntil": "domcontentloaded",
        "timeout": 20000
      },
      "next": ["wait_third_chat"]
    },
    {
      "id": "wait_third_chat",
      "type": "WaitNode",
      "name": "等待第3个聊天页面加载",
      "config": { "minMs": 3000, "maxMs": 5000 },
      "next": ["verify_third_chat"]
    },
    {
      "id": "verify_third_chat",
      "type": "PageSnapshotNode",
      "name": "验证第3个聊天页面信息",
      "config": {
        "script": "console.log('🔍 验证第3个商家聊天页面...'); const currentUrl = window.location.href; const pageTitle = document.title; const isInChat = currentUrl.includes('air.1688.com') || currentUrl.includes('def_cbu_web_im'); console.log(`当前URL: ${currentUrl}`); console.log(`页面标题: ${pageTitle}`); console.log(`是否在聊天页面: ${isInChat}`); const merchantInfo = { currentUrl: currentUrl, pageTitle: pageTitle, isInChat: isInChat, timestamp: new Date().toISOString() }; return { success: isInChat, verification: merchantInfo, merchantIndex: 3, timestamp: new Date().toISOString() };",
        "saveScreenshots": true
      },
      "next": ["save_verification_results"]
    },
    {
      "id": "save_verification_results",
      "type": "ResultSaverNode",
      "name": "保存验证结果",
      "config": {
        "outputDir": "archive/workflow-records",
        "filenameTemplate": "1688-merchant-verification-{timestamp}.json",
        "includeMetadata": true
      },
      "next": ["end"]
    },
    {
      "id": "end",
      "type": "EndNode",
      "name": "结束验证",
      "config": { "cleanup": false, "saveLogs": true }
    }
  ],
  "globalConfig": {
    "logLevel": "info",
    "screenshotOnError": true,
    "autoCleanup": false,
    "parallelExecution": false,
    "timeout": 600000
  }
}