{
  "name": "1688验证选择器测试",
  "description": "验证商家和旺旺选择器是否正确识别，结果输出到控制台",
  "version": "1.0.0",
  "preflows": ["1688-login-preflow"],
  "nodes": [
    { "id": "start", "type": "StartNode", "name": "开始", "next": ["attach"] },
    {
      "id": "attach",
      "type": "AttachSessionNode",
      "name": "会话接力",
      "config": {},
      "next": ["navigate_search"]
    },
    {
      "id": "navigate_search",
      "type": "NavigationNode",
      "name": "导航到搜索结果页",
      "config": {
        "url": "https://s.1688.com/selloffer/offer_search.htm?keywords=%B7%FE%D7%B0",
        "waitUntil": "domcontentloaded",
        "timeout": 30000
      },
      "next": ["wait_search"]
    },
    {
      "id": "wait_search",
      "type": "WaitNode",
      "name": "等待搜索结果完全加载",
      "config": { "minMs": 3000, "maxMs": 5000 },
      "next": ["verify_merchants"]
    },
    {
      "id": "verify_merchants",
      "type": "PageSnapshotNode",
      "name": "验证商家选择器",
      "config": {
        "script": "console.log('🔍 开始验证商家选择器...'); const merchantSelectors = ['.sm-offer-item', '.offer-item', '.sm-offer', '[class*=offer]']; let totalMerchants = 0; merchantSelectors.forEach(selector => { const elements = document.querySelectorAll(selector); console.log(`✅ 选择器 ${selector}: 找到 ${elements.length} 个商家容器`); if (elements.length > 0) { elements.slice(0, 3).forEach((el, index) => { const title = el.querySelector('h4, [class*=title], a[title]'); const company = el.querySelector('[class*=company], [class*=name], [class*=shop]'); const price = el.querySelector('[class*=price], [data-price]'); console.log(`  商家 ${index + 1}: 标题=${title ? title.textContent.trim().substring(0, 40) : '未找到'}, 公司=${company ? company.textContent.trim().substring(0, 20) : '未找到'}, 价格=${price ? price.textContent.trim() : '未找到'}`); }); totalMerchants += elements.length; } }); console.log(`📊 商家验证结果: 总共找到 ${totalMerchants} 个商家容器`); return { success: true, type: 'merchant_verification', totalMerchants: totalMerchants, timestamp: new Date().toISOString() };",
        "saveScreenshots": true
      },
      "next": ["verify_contacts"]
    },
    {
      "id": "verify_contacts",
      "type": "PageSnapshotNode",
      "name": "验证联系方式选择器",
      "config": {
        "script": "console.log('📞 开始验证联系方式选择器...'); const contactSelectors = ['[class*=contact]', '[class*=chat]', '[class*=im]', '[class*=旺旺]', '.sm-im', '.s-im']; let totalContacts = 0; let contactWithMerchant = 0; contactSelectors.forEach(selector => { const elements = document.querySelectorAll(selector); console.log(`✅ 联系方式选择器 ${selector}: 找到 ${elements.length} 个元素`); if (elements.length > 0) { elements.slice(0, 5).forEach((el, index) => { const merchantItem = el.closest('.sm-offer-item, .offer-item, .sm-offer, [class*=offer]'); const merchantTitle = merchantItem ? merchantItem.querySelector('h4, [class*=title], a[title]') : null; const contactText = el.textContent.trim(); console.log(`  联系方式 ${index + 1}: 文本='${contactText.substring(0, 20)}', 所属商家=${merchantTitle ? merchantTitle.textContent.trim().substring(0, 30) : '未找到商家'}`); if (merchantItem) contactWithMerchant++; }); totalContacts += elements.length; } }); console.log(`📊 联系方式验证结果: 总共找到 ${totalContacts} 个联系元素, 其中 ${contactWithMerchant} 个属于商家容器`); return { success: true, type: 'contact_verification', totalContacts: totalContacts, contactWithMerchant: contactWithMerchant, timestamp: new Date().toISOString() };",
        "saveScreenshots": true
      },
      "next": ["extract_sample"]
    },
    {
      "id": "extract_sample",
      "type": "PageSnapshotNode",
      "name": "提取样本商家数据",
      "config": {
        "script": "console.log('📦 提取样本商家数据...'); const merchants = []; const offerItems = document.querySelectorAll('.sm-offer-item, .offer-item, .sm-offer, [class*=offer]'); console.log(`从 ${offerItems.length} 个商家容器中提取前5个`); for (let i = 0; i < Math.min(5, offerItems.length); i++) { const item = offerItems[i]; const title = item.querySelector('h4, [class*=title], a[title]'); const link = item.querySelector('a[href*=\"1688.com\"]'); const price = item.querySelector('[class*=price], [data-price]'); const contactButton = item.querySelector('[class*=contact], [class*=chat], [class*=im], [class*=旺旺], .sm-im, .s-im'); const merchantName = item.querySelector('[class*=company], [class*=name], [class*=shop]'); const merchantLink = link ? link.href : null; let merchantId = null; if (merchantLink) { const idMatch = merchantLink.match(/member_id=([\\d]+)/); if (idMatch) merchantId = idMatch[1]; else { const pathMatch = merchantLink.match(/\\/(\\d+)\\.htm/); if (pathMatch) merchantId = pathMatch[1]; } } const merchantData = { index: i, merchantId: merchantId, title: title ? title.textContent.trim() : '', merchantName: merchantName ? merchantName.textContent.trim() : '', price: price ? price.textContent.trim() : '', merchantLink: merchantLink, hasContact: !!contactButton, contactInfo: contactButton ? { text: contactButton.textContent.trim(), className: contactButton.className } : null }; merchants.push(merchantData); console.log(`样本商家 ${i + 1}: ID=${merchantId}, 标题=${merchantData.title.substring(0, 30)}, 有联系方式=${merchantData.hasContact}`); } console.log(`✅ 提取完成: ${merchants.length} 个样本商家数据`); return { success: true, type: 'sample_extraction', sampleData: merchants, totalFound: offerItems.length, timestamp: new Date().toISOString() };",
        "saveScreenshots": true
      },
      "next": ["save_results"]
    },
    {
      "id": "save_results",
      "type": "ResultSaverNode",
      "name": "保存验证结果",
      "config": {
        "outputDir": "archive/workflow-records",
        "filenameTemplate": "1688-selector-verification-{timestamp}.json",
        "includeMetadata": true
      },
      "next": ["end"]
    },
    {
      "id": "end",
      "type": "EndNode",
      "name": "结束验证",
      "config": { "cleanup": false, "saveLogs": true }
    }
  ],
  "globalConfig": {
    "logLevel": "info",
    "screenshotOnError": true,
    "autoCleanup": false,
    "parallelExecution": false,
    "timeout": 300000
  }
}