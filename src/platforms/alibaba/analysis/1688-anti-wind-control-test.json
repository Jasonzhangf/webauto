{
  "name": "1688 绕过风控主页访问测试",
  "description": "测试不同方法绕过1688风控，恢复对正常主页的访问",
  "version": "1.0.0",
  "nodes": [
    { "id": "start", "type": "StartNode", "name": "开始", "next": ["attach"] },
    { "id": "attach", "type": "AttachSessionNode", "name": "会话接力", "config": {}, "next": ["test_approach_1"] },

    {
      "id": "test_approach_1",
      "type": "NavigationNode",
      "name": "方法1: 通过子域名进入",
      "config": {
        "url": "https://m.1688.com/",
        "waitUntil": "domcontentloaded",
        "timeout": 30000
      },
      "next": ["check_mobile_site"]
    },

    {
      "id": "check_mobile_site",
      "type": "PageSnapshotNode",
      "name": "检查移动站点状态",
      "config": {
        "script": "console.log('🔍 检查移动站点状态...'); const pageTitle = document.title; const pageUrl = window.location.href; const isVerification = pageTitle.includes('验证码') || document.body.textContent.includes('验证码') || document.body.textContent.includes('verification'); const hasProducts = document.querySelectorAll('.offer-item, .product-item, [class*=\"offer\"]').length > 0; console.log('页面标题:', pageTitle); console.log('当前URL:', pageUrl); console.log('是否被验证码拦截:', isVerification); console.log('是否有产品内容:', hasProducts); return { success: !isVerification && hasProducts, pageTitle, pageUrl, isVerification, hasProducts, isMobileSite: pageUrl.includes('m.1688.com'), timestamp: new Date().toISOString() };",
        "saveScreenshots": true
      },
      "next": ["wait_approach_1"]
    },

    {
      "id": "wait_approach_1",
      "type": "WaitNode",
      "name": "等待移动站点稳定",
      "config": { "minMs": 2000, "maxMs": 3000 },
      "next": ["test_approach_2"]
    },

    {
      "id": "test_approach_2",
      "type": "NavigationNode",
      "name": "方法2: 通过分类页面进入",
      "config": {
        "url": "https://www.1688.com/channels/",
        "waitUntil": "domcontentloaded",
        "timeout": 30000
      },
      "next": ["check_category_site"]
    },

    {
      "id": "check_category_site",
      "type": "PageSnapshotNode",
      "name": "检查分类页面状态",
      "config": {
        "script": "console.log('🔍 检查分类页面状态...'); const pageTitle = document.title; const pageUrl = window.location.href; const isVerification = pageTitle.includes('验证码') || document.body.textContent.includes('验证码') || document.body.textContent.includes('verification'); const hasCategories = document.querySelectorAll('.category-item, .nav-item, [class*=\"category\"]').length > 0; console.log('页面标题:', pageTitle); console.log('当前URL:', pageUrl); console.log('是否被验证码拦截:', isVerification); console.log('是否有分类内容:', hasCategories); return { success: !isVerification && hasCategories, pageTitle, pageUrl, isVerification, hasCategories, isCategorySite: pageUrl.includes('channels'), timestamp: new Date().toISOString() };",
        "saveScreenshots": true
      },
      "next": ["wait_approach_2"]
    },

    {
      "id": "wait_approach_2",
      "type": "WaitNode",
      "name": "等待分类页面稳定",
      "config": { "minMs": 2000, "maxMs": 3000 },
      "next": ["test_approach_3"]
    },

    {
      "id": "test_approach_3",
      "type": "NavigationNode",
      "name": "方法3: 添加随机参数访问主页",
      "config": {
        "url": "https://www.1688.com/",
        "waitUntil": "domcontentloaded",
        "timeout": 30000
      },
      "next": ["check_main_site_with_params"]
    },

    {
      "id": "check_main_site_with_params",
      "type": "PageSnapshotNode",
      "name": "检查带参数主页状态",
      "config": {
        "script": "console.log('🔍 检查带参数主页状态...'); const pageTitle = document.title; const pageUrl = window.location.href; const isVerification = pageTitle.includes('验证码') || document.body.textContent.includes('验证码') || document.body.textContent.includes('verification'); const hasNormalContent = document.querySelectorAll('.search-box, .nav-menu, .banner, [class*=\"search\"]').length > 0; console.log('页面标题:', pageTitle); console.log('当前URL:', pageUrl); console.log('是否被验证码拦截:', isVerification); console.log('是否有正常主页内容:', hasNormalContent); return { success: !isVerification && hasNormalContent, pageTitle, pageUrl, isVerification, hasNormalContent, isMainSite: pageUrl.includes('1688.com') && !pageUrl.includes('air.1688.com'), timestamp: new Date().toISOString() };",
        "saveScreenshots": true
      },
      "next": ["save_results"]
    },

    {
      "id": "save_results",
      "type": "ResultSaverNode",
      "name": "保存测试结果",
      "config": {
        "outputDir": "archive/workflow-records",
        "filenameTemplate": "1688-anti-wind-control-test-{timestamp}.json",
        "includeMetadata": true
      },
      "next": ["end"]
    },

    {
      "id": "end",
      "type": "EndNode",
      "name": "结束",
      "config": { "cleanup": false, "saveLogs": true }
    }
  ],
  "globalConfig": {
    "logLevel": "info",
    "screenshotOnError": true,
    "autoCleanup": false,
    "parallelExecution": false,
    "timeout": 900000
  }
}