{
  "name": "1688超强化发送按钮高亮-MCP连接测试",
  "description": "通过MCP browser_tools连接到用户浏览器执行超强化高亮脚本",
  "version": "1.0.0",
  "preflows": ["1688-login-preflow"],
  "anchor": {
    "hostFilter": "1688.com",
    "selectors": [".userAvatarLogo img"],
    "requireVisible": true,
    "maxWaitMs": 600000,
    "pollIntervalMs": 1500,
    "highlight": true,
    "persistHighlight": true,
    "highlightLabel": "LOGIN_ANCHOR"
  },
  "nodes": [
    { "id": "start", "type": "StartNode", "name": "开始", "next": ["attach"] },
    {
      "id": "attach",
      "type": "AttachSessionNode",
      "name": "会话接力",
      "config": {},
      "next": ["navigate_to_chat"]
    },
    {
      "id": "navigate_to_chat",
      "type": "NavigationNode",
      "name": "导航到1688聊天页面",
      "config": {
        "url": "https://air.1688.com/app/ocms-fusion-components-1688/def_cbu_web_im/index.html",
        "waitUntil": "domcontentloaded",
        "timeout": 30000
      },
      "next": ["wait_chat_load"]
    },
    {
      "id": "wait_chat_load",
      "type": "WaitNode",
      "name": "等待聊天页面加载",
      "config": { "minMs": 3000, "maxMs": 5000 },
      "next": ["execute_ultra_highlight"]
    },
    {
      "id": "execute_ultra_highlight",
      "type": "JavaScriptExecutionNode",
      "name": "执行超强化高亮脚本",
      "config": {
        "script": "// 超强化1688发送按钮高亮脚本\nconsole.log('🎨 开始执行超强化1688发送按钮高亮...');\n\n// 添加脉冲动画CSS\nconst style = document.createElement('style');\nstyle.textContent = `\n@keyframes pulse-glow {\n    0% {\n        transform: scale(1);\n        box-shadow: 0 0 20px rgba(255, 0, 0, 0.8);\n    }\n    50% {\n        transform: scale(1.1);\n        box-shadow: 0 0 40px rgba(255, 0, 0, 1), 0 0 60px rgba(255, 0, 0, 0.6);\n    }\n    100% {\n        transform: scale(1);\n        box-shadow: 0 0 20px rgba(255, 0, 0, 0.8);\n    }\n}\n\n@keyframes pulse-blue {\n    0% {\n        transform: scale(1);\n        box-shadow: 0 0 20px rgba(0, 100, 255, 0.8);\n    }\n    50% {\n        transform: scale(1.1);\n        box-shadow: 0 0 40px rgba(0, 100, 255, 1), 0 0 60px rgba(0, 100, 255, 0.6);\n    }\n    100% {\n        transform: scale(1);\n        box-shadow: 0 0 20px rgba(0, 100, 255, 0.8);\n    }\n}\n\n@keyframes pulse-green {\n    0% {\n        transform: scale(1);\n        box-shadow: 0 0 20px rgba(0, 255, 0, 0.8);\n    }\n    50% {\n        transform: scale(1.05);\n        box-shadow: 0 0 40px rgba(0, 255, 0, 1), 0 0 60px rgba(0, 255, 0, 0.6);\n    }\n    100% {\n        transform: scale(1);\n        box-shadow: 0 0 20px rgba(0, 255, 0, 0.8);\n    }\n}\n\n@keyframes rainbow-border {\n    0% { border-color: red; }\n    25% { border-color: orange; }\n    50% { border-color: yellow; }\n    75% { border-color: green; }\n    100% { border-color: blue; }\n}\n`;\ndocument.head.appendChild(style);\n\n// 超强样式配置\nconst ultraStyles = {\n    sendButton: {\n        border: '8px solid red !important',\n        background: 'rgba(255, 0, 0, 0.7) !important',\n        boxShadow: '0 0 30px rgba(255, 0, 0, 1), inset 0 0 20px rgba(255, 0, 0, 0.5) !important',\n        zIndex: '999999 !important',\n        position: 'relative !important',\n        transform: 'scale(1.05) !important',\n        animation: 'pulse-glow 1.5s infinite !important',\n        borderRadius: '8px !important',\n        outline: '3px solid rgba(255, 255, 255, 0.8) !important',\n        outlineOffset: '3px !important'\n    },\n    inputBox: {\n        border: '6px solid blue !important',\n        background: 'rgba(0, 100, 255, 0.6) !important',\n        boxShadow: '0 0 25px rgba(0, 100, 255, 1), inset 0 0 15px rgba(0, 100, 255, 0.4) !important',\n        zIndex: '999998 !important',\n        position: 'relative !important',\n        transform: 'scale(1.03) !important',\n        animation: 'pulse-blue 1.3s infinite !important',\n        borderRadius: '6px !important',\n        outline: '2px solid rgba(255, 255, 255, 0.7) !important'\n    },\n    container: {\n        border: '4px solid green !important',\n        background: 'rgba(0, 255, 0, 0.4) !important',\n        boxShadow: '0 0 20px rgba(0, 255, 0, 0.8), inset 0 0 10px rgba(0, 255, 0, 0.3) !important',\n        zIndex: '999997 !important',\n        position: 'relative !important',\n        transform: 'scale(1.02) !important',\n        animation: 'pulse-green 1.1s infinite !important',\n        borderRadius: '4px !important',\n        outline: '2px solid rgba(255, 255, 255, 0.6) !important'\n    }\n};\n\nlet highlightedCount = 0;\n\n// 清除之前的高亮\ndocument.querySelectorAll('[data-ultra-highlight]').forEach(el => {\n    el.removeAttribute('data-ultra-highlight');\n    // 重置样式\n    el.style.cssText = el.getAttribute('data-original-style') || '';\n});\n\nconsole.log('🧹 清理完成，开始新的高亮...');\n\n// 1. 高亮所有蓝色发送按钮（通过内联样式）\ndocument.querySelectorAll('button[style*=\"background-color\"]').forEach((el, index) => {\n    const style = el.getAttribute('style') || '';\n    if (style.includes('rgb(0, 115, 255)') || style.includes('rgb(0,115,255)') ||\n        style.includes('#0073FF') || style.includes('background-color:rgb(0,115,255)')) {\n\n        // 保存原始样式\n        if (!el.hasAttribute('data-original-style')) {\n            el.setAttribute('data-original-style', el.style.cssText || '');\n        }\n\n        // 应用超强化样式\n        Object.keys(ultraStyles.sendButton).forEach(prop => {\n            el.style[prop] = ultraStyles.sendButton[prop];\n        });\n\n        el.setAttribute('data-ultra-highlight', 'blue-send-' + index);\n        highlightedCount++;\n        console.log('📤 超强高亮蓝色发送按钮', index + 1, ':', el.textContent.trim().substring(0, 30));\n    }\n});\n\n// 2. 高亮包含insight类的按钮\ndocument.querySelectorAll('button[class*=\"insight\"], button[class*=\"Insight\"]').forEach((el, index) => {\n    if (!el.hasAttribute('data-ultra-highlight')) {\n\n        // 保存原始样式\n        if (!el.hasAttribute('data-original-style')) {\n            el.setAttribute('data-original-style', el.style.cssText || '');\n        }\n\n        // 应用超强化样式\n        Object.keys(ultraStyles.sendButton).forEach(prop => {\n            el.style[prop] = ultraStyles.sendButton[prop];\n        });\n\n        el.setAttribute('data-ultra-highlight', 'insight-' + index);\n        highlightedCount++;\n        console.log('📤 超强高亮Insight按钮', index + 1, ':', el.className);\n    }\n});\n\n// 3. 高亮所有textarea输入框\ndocument.querySelectorAll('textarea').forEach((el, index) => {\n    if (!el.hasAttribute('data-ultra-highlight')) {\n\n        // 保存原始样式\n        if (!el.hasAttribute('data-original-style')) {\n            el.setAttribute('data-original-style', el.style.cssText || '');\n        }\n\n        // 应用输入框强化样式\n        Object.keys(ultraStyles.inputBox).forEach(prop => {\n            el.style[prop] = ultraStyles.inputBox[prop];\n        });\n\n        el.setAttribute('data-ultra-highlight', 'textarea-' + index);\n        highlightedCount++;\n        console.log('📝 超强高亮输入框', index + 1, ':', el.className || '(无类名)');\n    }\n});\n\n// 4. 高亮消息容器\ndocument.querySelectorAll('[class*=\"message\"], [class*=\"chat\"], [class*=\"im\"]').forEach((el, index) => {\n    const rect = el.getBoundingClientRect();\n    if (rect.width > 80 && rect.height > 40) { // 只高亮有意义的容器\n\n        if (!el.hasAttribute('data-ultra-highlight')) {\n\n            // 保存原始样式\n            if (!el.hasAttribute('data-original-style')) {\n                el.setAttribute('data-original-style', el.style.cssText || '');\n            }\n\n            // 应用容器强化样式\n            Object.keys(ultraStyles.container).forEach(prop => {\n                el.style[prop] = ultraStyles.container[prop];\n            });\n\n            el.setAttribute('data-ultra-highlight', 'container-' + index);\n            highlightedCount++;\n            console.log('💬 超强高亮容器', index + 1, ':', el.className);\n        }\n    }\n});\n\n// 5. 查找包含\"发送\"文本的元素\ndocument.querySelectorAll('button, [role=\"button\"], span, div').forEach((el, index) => {\n    if (!el.hasAttribute('data-ultra-highlight')) {\n        const text = el.textContent.trim();\n        if (text.includes('发送') || text.includes('Send') || text.includes('发送消息')) {\n\n            // 保存原始样式\n            if (!el.hasAttribute('data-original-style')) {\n                el.setAttribute('data-original-style', el.style.cssText || '');\n            }\n\n            // 应用发送按钮强化样式\n            Object.keys(ultraStyles.sendButton).forEach(prop => {\n                el.style[prop] = ultraStyles.sendButton[prop];\n            });\n\n            el.setAttribute('data-ultra-highlight', 'text-send-' + index);\n            highlightedCount++;\n            console.log('📤 超强高亮文本发送按钮', index + 1, ':', text);\n        }\n    }\n});\n\n// 6. 高亮input[type=\"text\"]元素\ndocument.querySelectorAll('input[type=\"text\"]').forEach((el, index) => {\n    if (!el.hasAttribute('data-ultra-highlight')) {\n\n        // 保存原始样式\n        if (!el.hasAttribute('data-original-style')) {\n            el.setAttribute('data-original-style', el.style.cssText || '');\n        }\n\n        // 应用输入框强化样式\n        Object.keys(ultraStyles.inputBox).forEach(prop => {\n            el.style[prop] = ultraStyles.inputBox[prop];\n        });\n\n        el.setAttribute('data-ultra-highlight', 'text-input-' + index);\n        highlightedCount++;\n        console.log('📝 超强高亮文本输入框', index + 1);\n    }\n});\n\n// 7. 高亮contenteditable元素\ndocument.querySelectorAll('[contenteditable=\"true\"]').forEach((el, index) => {\n    if (!el.hasAttribute('data-ultra-highlight')) {\n\n        // 保存原始样式\n        if (!el.hasAttribute('data-original-style')) {\n            el.setAttribute('data-original-style', el.style.cssText || '');\n        }\n\n        // 应用输入框强化样式\n        Object.keys(ultraStyles.inputBox).forEach(prop => {\n            el.style[prop] = ultraStyles.inputBox[prop];\n        });\n\n        el.setAttribute('data-ultra-highlight', 'contenteditable-' + index);\n        highlightedCount++;\n        console.log('📝 超强高亮可编辑元素', index + 1);\n    }\n});\n\nconsole.log(`🎯 超强化高亮完成！总共高亮了 ${highlightedCount} 个元素`);\n\n// 创建超强化信息提示框\nconst ultraInfoBox = document.createElement('div');\nultraInfoBox.style.cssText = `\n    position: fixed !important;\n    top: 20px !important;\n    left: 20px !important;\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;\n    color: white !important;\n    padding: 20px 25px !important;\n    border-radius: 12px !important;\n    z-index: 999999 !important;\n    font-size: 16px !important;\n    font-weight: bold !important;\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3) !important;\n    border: 2px solid rgba(255, 255, 255, 0.8) !important;\n    max-width: 400px !important;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;\n    animation: slideIn 0.3s ease-out !important;\n`;\n\n// 添加滑入动画\nconst slideInStyle = document.createElement('style');\nslideInStyle.textContent = `\n@keyframes slideIn {\n    from {\n        transform: translateX(-100%);\n        opacity: 0;\n    }\n    to {\n        transform: translateX(0);\n        opacity: 1;\n    }\n}\n`;\ndocument.head.appendChild(slideInStyle);\n\nultraInfoBox.innerHTML = `\n    <h3 style=\"margin: 0 0 15px 0; text-align: center; font-size: 20px;\">🎨 1688超强化高亮完成</h3>\n    <div style=\"margin: 10px 0;\">\n        <p style=\"margin: 5px 0; color: #FFE5B4;\">📤 红色脉冲: 发送按钮</p>\n        <p style=\"margin: 5px 0; color: #E3F2FD;\">📝 蓝色脉冲: 输入框</p>\n        <p style=\"margin: 5px 0; color: #E8F5E8;\">💬 绿色脉冲: 消息容器</p>\n    </div>\n    <hr style=\"margin: 15px 0; border: 1px solid rgba(255, 255, 255, 0.3);\">\n    <p style=\"margin: 15px 0 5px 0; font-size: 18px; font-weight: bold;\">✅ 找到 ${highlightedCount} 个元素</p>\n    <p style=\"margin: 5px 0 0 0; font-size: 14px; color: #FFE5B4;\">🔄 10秒后自动消失</p>\n    <button onclick=\"this.parentElement.remove()\" style=\"\n        margin-top: 10px;\n        background: rgba(255, 255, 255, 0.2);\n        border: 1px solid rgba(255, 255, 255, 0.5);\n        border-radius: 6px;\n        padding: 8px 15px;\n        color: white;\n        font-size: 14px;\n        cursor: pointer;\n        width: 100%;\n        font-weight: bold;\n    \">❌ 关闭提示</button>\n`;\n\ndocument.body.appendChild(ultraInfoBox);\n\n// 10秒后自动移除提示框\nsetTimeout(() => {\n    if (ultraInfoBox && ultraInfoBox.parentNode) {\n        ultraInfoBox.style.opacity = '0';\n        setTimeout(() => {\n            if (ultraInfoBox.parentNode) {\n                ultraInfoBox.parentNode.removeChild(ultraInfoBox);\n            }\n        }, 300);\n    }\n}, 10000);\n\n// 创建调试信息\nconsole.log('\\n🔍 调试信息:');\nconsole.log('页面URL:', window.location.href);\nconsole.log('页面标题:', document.title);\nconsole.log('找到的蓝色按钮:', document.querySelectorAll('button[style*=\"background-color\"]').length);\nconsole.log('找到的textarea:', document.querySelectorAll('textarea').length);\nconsole.log('找到的消息容器:', document.querySelectorAll('[class*=\"message\"], [class*=\"chat\"], [class*=\"im\"]').length);\n\n// 返回详细结果\nreturn {\n    success: true,\n    highlightedCount: highlightedCount,\n    timestamp: new Date().toISOString(),\n    url: window.location.href,\n    title: document.title,\n    elementsFound: {\n        blueButtons: document.querySelectorAll('button[style*=\"background-color\"]').length,\n        textareas: document.querySelectorAll('textarea').length,\n        containers: document.querySelectorAll('[class*=\"message\"], [class*=\"chat\"], [class*=\"im\"]').length,\n        textButtons: document.querySelectorAll('button, span, div').length\n    }\n};",
        "waitForResult": true
      },
      "next": ["save_result"]
    },
    {
      "id": "save_result",
      "type": "ResultSaverNode",
      "name": "保存高亮结果",
      "config": {
        "outputDir": "archive/workflow-records",
        "filenameTemplate": "1688-ultra-highlight-result-{timestamp}.json",
        "includeMetadata": true
      },
      "next": ["end"]
    },
    {
      "id": "end",
      "type": "EndNode",
      "name": "结束",
      "config": { "cleanup": false, "saveLogs": true }
    }
  ],
  "globalConfig": {
    "logLevel": "info",
    "screenshotOnError": true,
    "autoCleanup": false,
    "parallelExecution": false,
    "timeout": 600000
  }
}